{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN4gaJsMThS3GKVOHd7lyCZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["---\n","#### 작업형 1-1. 총 대출액 = 신용대출 + 담보대출\n","1. 각 지역코드 내에서 성별 총 대출액의 합계를 계산하라\n","2. 성별 간 총 대출액의 차이가 가장 큰 지역코드를 구하라\n","---"],"metadata":{"id":"BvAyMG7pqwYP"}},{"cell_type":"code","execution_count":52,"metadata":{"id":"HQIyyjrxquh_","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1757996430853,"user_tz":-540,"elapsed":147,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"3602ac58-36a3-4dc7-e93c-ed9fc306126c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["(5000, 4)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["         지역코드  성별    신용대출     담보대출\n","0  4100000000   1  688608  5706058\n","1  4100000000   2  611035  2260521\n","2  4100000001   1  125392  5946493\n","3  4100000001   2  239679  4711962\n","4  4100000002   1  623758  5411745"],"text/html":["\n","  <div id=\"df-1e459dd1-33d1-4eff-834e-b5cc29a7f9a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지역코드</th>\n","      <th>성별</th>\n","      <th>신용대출</th>\n","      <th>담보대출</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4100000000</td>\n","      <td>1</td>\n","      <td>688608</td>\n","      <td>5706058</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4100000000</td>\n","      <td>2</td>\n","      <td>611035</td>\n","      <td>2260521</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4100000001</td>\n","      <td>1</td>\n","      <td>125392</td>\n","      <td>5946493</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4100000001</td>\n","      <td>2</td>\n","      <td>239679</td>\n","      <td>4711962</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4100000002</td>\n","      <td>1</td>\n","      <td>623758</td>\n","      <td>5411745</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e459dd1-33d1-4eff-834e-b5cc29a7f9a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e459dd1-33d1-4eff-834e-b5cc29a7f9a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e459dd1-33d1-4eff-834e-b5cc29a7f9a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-48878ea3-fc40-437c-b994-d370e6f48d3d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48878ea3-fc40-437c-b994-d370e6f48d3d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-48878ea3-fc40-437c-b994-d370e6f48d3d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc9c0\\uc5ed\\ucf54\\ub4dc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4100000000,\n        \"max\": 4100000002,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4100000000,\n          4100000001,\n          4100000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2e0\\uc6a9\\ub300\\ucd9c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 256108,\n        \"min\": 125392,\n        \"max\": 688608,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          611035,\n          623758\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub2f4\\ubcf4\\ub300\\ucd9c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1497168,\n        \"min\": 2260521,\n        \"max\": 5946493,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2260521,\n          5411745\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}],"source":["import numpy as np\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/loan.csv\")\n","display(df.shape, df.head())"]},{"cell_type":"code","source":["df['총대출액'] = df['신용대출'] + df['담보대출']\n","g_sum = df.groupby(['지역코드', '성별'])['총대출액'].sum().reset_index()\n","t = g_sum.pivot(index='지역코드', columns='성별', values='총대출액').reset_index()\n","t['diff'] = abs(t[1] - t[2])\n","ans = t.sort_values('diff', ascending=False)    #4100000278\n","print('성별 간 총 대출액의 차이가 가장 큰 지역코드 = ', ans.iloc[0,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FBbEIhbSObWD","executionInfo":{"status":"ok","timestamp":1757996430878,"user_tz":-540,"elapsed":31,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"cb7c8518-3980-427d-de46-d69bc57f61ae"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["성별 간 총 대출액의 차이가 가장 큰 지역코드 =  4100000278\n"]}]},{"cell_type":"markdown","source":["---\n","#### 작업형 1-2. 검거율 = 검거건수/발생건수\n","1. 각 연도에서 가장 높은 검거율을 기록한 범죄유형을 찾아라\n","2. 해당 범죄유형의 검거건수를 구하고, 이 값들을 모두 합산하라 (정수출력)\n","---"],"metadata":{"id":"yBp4E9yzrIDV"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/crime.csv\")\n","display(df.shape, df.head())"],"metadata":{"id":"z1HwGXmYrWsG","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1757996431011,"user_tz":-540,"elapsed":132,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"f1003cec-7acf-4657-a061-7ff25d5ece99"},"execution_count":54,"outputs":[{"output_type":"display_data","data":{"text/plain":["(14, 16)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["     연도    구분  강력범죄  절도범죄  폭력범죄  지능범죄  풍속범죄  특별경제범죄  마약범죄  보건범죄  환경범죄  교통범죄  \\\n","0  2014  발생건수   800   900   750   650   700    1034   600   850   800   900   \n","1  2014  검거건수   500   600   400   450   400     961   350   500   450   550   \n","2  2015  발생건수   900   768   800   750   700    1000   850   800   900   950   \n","3  2015  검거건수   600   713   500   550   400     600   500   450   550   600   \n","4  2016  발생건수   850   800   880   750   700     950   900   800   850   900   \n","\n","   노동범죄  선거범죄  병역범죄  기타범죄  \n","0   750   800   700  1000  \n","1   400   450   400   600  \n","2   800   850   750  1000  \n","3   450   500   400   600  \n","4   750   800   700   950  "],"text/html":["\n","  <div id=\"df-cd53be23-435b-4959-a1c0-36ece19a0ed1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>연도</th>\n","      <th>구분</th>\n","      <th>강력범죄</th>\n","      <th>절도범죄</th>\n","      <th>폭력범죄</th>\n","      <th>지능범죄</th>\n","      <th>풍속범죄</th>\n","      <th>특별경제범죄</th>\n","      <th>마약범죄</th>\n","      <th>보건범죄</th>\n","      <th>환경범죄</th>\n","      <th>교통범죄</th>\n","      <th>노동범죄</th>\n","      <th>선거범죄</th>\n","      <th>병역범죄</th>\n","      <th>기타범죄</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2014</td>\n","      <td>발생건수</td>\n","      <td>800</td>\n","      <td>900</td>\n","      <td>750</td>\n","      <td>650</td>\n","      <td>700</td>\n","      <td>1034</td>\n","      <td>600</td>\n","      <td>850</td>\n","      <td>800</td>\n","      <td>900</td>\n","      <td>750</td>\n","      <td>800</td>\n","      <td>700</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2014</td>\n","      <td>검거건수</td>\n","      <td>500</td>\n","      <td>600</td>\n","      <td>400</td>\n","      <td>450</td>\n","      <td>400</td>\n","      <td>961</td>\n","      <td>350</td>\n","      <td>500</td>\n","      <td>450</td>\n","      <td>550</td>\n","      <td>400</td>\n","      <td>450</td>\n","      <td>400</td>\n","      <td>600</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2015</td>\n","      <td>발생건수</td>\n","      <td>900</td>\n","      <td>768</td>\n","      <td>800</td>\n","      <td>750</td>\n","      <td>700</td>\n","      <td>1000</td>\n","      <td>850</td>\n","      <td>800</td>\n","      <td>900</td>\n","      <td>950</td>\n","      <td>800</td>\n","      <td>850</td>\n","      <td>750</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2015</td>\n","      <td>검거건수</td>\n","      <td>600</td>\n","      <td>713</td>\n","      <td>500</td>\n","      <td>550</td>\n","      <td>400</td>\n","      <td>600</td>\n","      <td>500</td>\n","      <td>450</td>\n","      <td>550</td>\n","      <td>600</td>\n","      <td>450</td>\n","      <td>500</td>\n","      <td>400</td>\n","      <td>600</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016</td>\n","      <td>발생건수</td>\n","      <td>850</td>\n","      <td>800</td>\n","      <td>880</td>\n","      <td>750</td>\n","      <td>700</td>\n","      <td>950</td>\n","      <td>900</td>\n","      <td>800</td>\n","      <td>850</td>\n","      <td>900</td>\n","      <td>750</td>\n","      <td>800</td>\n","      <td>700</td>\n","      <td>950</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd53be23-435b-4959-a1c0-36ece19a0ed1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd53be23-435b-4959-a1c0-36ece19a0ed1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd53be23-435b-4959-a1c0-36ece19a0ed1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-33886e4d-2a9f-475c-a71f-4afd95f2b114\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33886e4d-2a9f-475c-a71f-4afd95f2b114')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-33886e4d-2a9f-475c-a71f-4afd95f2b114 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2014,\n        \"max\": 2016,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2014,\n          2015,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\uac80\\uac70\\uac74\\uc218\",\n          \"\\ubc1c\\uc0dd\\uac74\\uc218\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac15\\ub825\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 171,\n        \"min\": 500,\n        \"max\": 900,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          500,\n          850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc808\\ub3c4\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 110,\n        \"min\": 600,\n        \"max\": 900,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          600,\n          800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3ed\\ub825\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 205,\n        \"min\": 400,\n        \"max\": 880,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          400,\n          880\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\ub2a5\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 130,\n        \"min\": 450,\n        \"max\": 750,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          450,\n          550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud48d\\uc18d\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 164,\n        \"min\": 400,\n        \"max\": 700,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          400,\n          700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud2b9\\ubcc4\\uacbd\\uc81c\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175,\n        \"min\": 600,\n        \"max\": 1034,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          961,\n          950\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub9c8\\uc57d\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 232,\n        \"min\": 350,\n        \"max\": 900,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          350,\n          900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubcf4\\uac74\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 189,\n        \"min\": 450,\n        \"max\": 850,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          500,\n          450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud658\\uacbd\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 198,\n        \"min\": 450,\n        \"max\": 900,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          450,\n          850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad50\\ud1b5\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 189,\n        \"min\": 550,\n        \"max\": 950,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          550,\n          600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub178\\ub3d9\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 189,\n        \"min\": 400,\n        \"max\": 800,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          400,\n          450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc120\\uac70\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 189,\n        \"min\": 450,\n        \"max\": 850,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          450,\n          500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubcd1\\uc5ed\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 174,\n        \"min\": 400,\n        \"max\": 750,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          700,\n          400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uae30\\ud0c0\\ubc94\\uc8c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 210,\n        \"min\": 600,\n        \"max\": 1000,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1000,\n          600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# 데이터 변환\n","df_new = pd.melt(df, id_vars = ['연도','구분'], var_name='범죄유형', value_name='건수')\n","df_pivot = df_new.pivot_table(index=['연도','범죄유형'], columns='구분', values='건수').reset_index()\n","df_pivot.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PfZ3srJKQFmn","executionInfo":{"status":"ok","timestamp":1757996431064,"user_tz":-540,"elapsed":56,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"995625ab-5bde-4f45-ffd8-165f7f094f8c"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["구분    연도  범죄유형   검거건수    발생건수\n","0   2014  강력범죄  500.0   800.0\n","1   2014  교통범죄  550.0   900.0\n","2   2014  기타범죄  600.0  1000.0\n","3   2014  노동범죄  400.0   750.0\n","4   2014  마약범죄  350.0   600.0"],"text/html":["\n","  <div id=\"df-33fb586c-b72a-408a-87c7-e71aacf1b091\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>구분</th>\n","      <th>연도</th>\n","      <th>범죄유형</th>\n","      <th>검거건수</th>\n","      <th>발생건수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2014</td>\n","      <td>강력범죄</td>\n","      <td>500.0</td>\n","      <td>800.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2014</td>\n","      <td>교통범죄</td>\n","      <td>550.0</td>\n","      <td>900.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2014</td>\n","      <td>기타범죄</td>\n","      <td>600.0</td>\n","      <td>1000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2014</td>\n","      <td>노동범죄</td>\n","      <td>400.0</td>\n","      <td>750.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2014</td>\n","      <td>마약범죄</td>\n","      <td>350.0</td>\n","      <td>600.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33fb586c-b72a-408a-87c7-e71aacf1b091')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-33fb586c-b72a-408a-87c7-e71aacf1b091 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-33fb586c-b72a-408a-87c7-e71aacf1b091');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-29968395-74df-4fb3-8b8f-b0825bf0a30e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29968395-74df-4fb3-8b8f-b0825bf0a30e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-29968395-74df-4fb3-8b8f-b0825bf0a30e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_pivot","summary":"{\n  \"name\": \"df_pivot\",\n  \"rows\": 98,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2014,\n        \"max\": 2020,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2014,\n          2015,\n          2019\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc94\\uc8c4\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"\\uc9c0\\ub2a5\\ubc94\\uc8c4\",\n          \"\\ud3ed\\ub825\\ubc94\\uc8c4\",\n          \"\\uac15\\ub825\\ubc94\\uc8c4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac80\\uac70\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 187.19076976071855,\n        \"min\": 350.0,\n        \"max\": 1363.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          1350.0,\n          1300.0,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\uc0dd\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 149.6676014072638,\n        \"min\": 600.0,\n        \"max\": 1500.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          950.0,\n          880.0,\n          800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# 검거율 컬럼 생성\n","df_pivot['검거율'] = df_pivot['검거건수'] / df_pivot['발생건수']\n","display(df_pivot.head())\n","\n","# 연도별 가장 높은 검거율의 id\n","max_id = df_pivot.groupby('연도')['검거율'].idxmax()\n","display(max_id)\n","\n","# 위 id에 해당하는 데이터\n","result = df_pivot.loc[max_id]\n","display(result.head())\n","\n","# 검거 건수의 총합\n","print('정답 = ', int(result['검거건수'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":732},"id":"P3YQzbd6S2wV","executionInfo":{"status":"ok","timestamp":1757996431177,"user_tz":-540,"elapsed":116,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"922e04c1-a2c0-45b4-9e25-22719611d483"},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["구분    연도  범죄유형   검거건수    발생건수       검거율\n","0   2014  강력범죄  500.0   800.0  0.625000\n","1   2014  교통범죄  550.0   900.0  0.611111\n","2   2014  기타범죄  600.0  1000.0  0.600000\n","3   2014  노동범죄  400.0   750.0  0.533333\n","4   2014  마약범죄  350.0   600.0  0.583333"],"text/html":["\n","  <div id=\"df-b7b1283d-50b1-46b6-9fa9-754ceca64db6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>구분</th>\n","      <th>연도</th>\n","      <th>범죄유형</th>\n","      <th>검거건수</th>\n","      <th>발생건수</th>\n","      <th>검거율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2014</td>\n","      <td>강력범죄</td>\n","      <td>500.0</td>\n","      <td>800.0</td>\n","      <td>0.625000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2014</td>\n","      <td>교통범죄</td>\n","      <td>550.0</td>\n","      <td>900.0</td>\n","      <td>0.611111</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2014</td>\n","      <td>기타범죄</td>\n","      <td>600.0</td>\n","      <td>1000.0</td>\n","      <td>0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2014</td>\n","      <td>노동범죄</td>\n","      <td>400.0</td>\n","      <td>750.0</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2014</td>\n","      <td>마약범죄</td>\n","      <td>350.0</td>\n","      <td>600.0</td>\n","      <td>0.583333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7b1283d-50b1-46b6-9fa9-754ceca64db6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b7b1283d-50b1-46b6-9fa9-754ceca64db6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b7b1283d-50b1-46b6-9fa9-754ceca64db6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d341130a-5211-438b-915a-9f870586d374\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d341130a-5211-438b-915a-9f870586d374')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d341130a-5211-438b-915a-9f870586d374 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print('\\uc815\\ub2f5 = ', int(result['\\uac80\\uac70\\uac74\\uc218']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2014,\n        \"max\": 2014,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2014\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc94\\uc8c4\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\uad50\\ud1b5\\ubc94\\uc8c4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac80\\uac70\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103.6822067666386,\n        \"min\": 350.0,\n        \"max\": 600.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          550.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\uc0dd\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 151.65750888103102,\n        \"min\": 600.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          900.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac80\\uac70\\uc728\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.035442528683859074,\n        \"min\": 0.5333333333333333,\n        \"max\": 0.625,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.6111111111111112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["연도\n","2014    10\n","2015    22\n","2016    39\n","2017    46\n","2018    56\n","2019    76\n","2020    93\n","Name: 검거율, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>검거율</th>\n","    </tr>\n","    <tr>\n","      <th>연도</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2014</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["구분    연도    범죄유형    검거건수    발생건수       검거율\n","10  2014  특별경제범죄   961.0  1034.0  0.929400\n","22  2015    절도범죄   713.0   768.0  0.928385\n","39  2016    폭력범죄   812.0   880.0  0.922727\n","46  2017    마약범죄  1300.0  1400.0  0.928571\n","56  2018    강력범죄  1350.0  1450.0  0.931034"],"text/html":["\n","  <div id=\"df-db26ca5a-e949-46aa-9b44-dfd9cba60051\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>구분</th>\n","      <th>연도</th>\n","      <th>범죄유형</th>\n","      <th>검거건수</th>\n","      <th>발생건수</th>\n","      <th>검거율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>2014</td>\n","      <td>특별경제범죄</td>\n","      <td>961.0</td>\n","      <td>1034.0</td>\n","      <td>0.929400</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2015</td>\n","      <td>절도범죄</td>\n","      <td>713.0</td>\n","      <td>768.0</td>\n","      <td>0.928385</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>2016</td>\n","      <td>폭력범죄</td>\n","      <td>812.0</td>\n","      <td>880.0</td>\n","      <td>0.922727</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2017</td>\n","      <td>마약범죄</td>\n","      <td>1300.0</td>\n","      <td>1400.0</td>\n","      <td>0.928571</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>2018</td>\n","      <td>강력범죄</td>\n","      <td>1350.0</td>\n","      <td>1450.0</td>\n","      <td>0.931034</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db26ca5a-e949-46aa-9b44-dfd9cba60051')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-db26ca5a-e949-46aa-9b44-dfd9cba60051 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-db26ca5a-e949-46aa-9b44-dfd9cba60051');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c2a3f82a-e91a-412d-9403-80884834c67b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2a3f82a-e91a-412d-9403-80884834c67b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c2a3f82a-e91a-412d-9403-80884834c67b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print('\\uc815\\ub2f5 = ', int(result['\\uac80\\uac70\\uac74\\uc218']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2014,\n        \"max\": 2018,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2015,\n          2018,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc94\\uc8c4\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\uc808\\ub3c4\\ubc94\\uc8c4\",\n          \"\\uac15\\ub825\\ubc94\\uc8c4\",\n          \"\\ud3ed\\ub825\\ubc94\\uc8c4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac80\\uac70\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 286.37161172155317,\n        \"min\": 713.0,\n        \"max\": 1350.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          713.0,\n          1350.0,\n          812.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\uc0dd\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 306.2985471725258,\n        \"min\": 768.0,\n        \"max\": 1450.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          768.0,\n          1450.0,\n          880.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac80\\uac70\\uc728\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.00314018577625178,\n        \"min\": 0.9227272727272727,\n        \"max\": 0.9310344827586207,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9283854166666666,\n          0.9310344827586207,\n          0.9227272727272727\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["정답 =  7799\n"]}]},{"cell_type":"markdown","source":["---\n","#### 작업형 1-3.\n","1. 만족도의 결측치는 평균으로 대체\n","2. 근속연수의 결측치는 같은 부서내 동일한 성과등급을 가진 직원들의 평균 근속연수로 대체 (평균근속연수는 소수점 이하 절사하여 정수로 사용)\n","3. 각 직원의 연봉 / 근속연수 값을 계산, 그 값이 세번째로 큰 직원의 근속연수를 구하라\n","4. 각 직원의 연봉 / 만족도 값을 계산, 그 값이 두번째로 큰 직원의 교육 참가횟수를 구하라\n","5. 3과 4의 값을 더한 결과를 구하라 (정수출력)  \n","---"],"metadata":{"id":"1xYFILhrr00V"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/hr.csv\")\n","display(df.shape, df.head())"],"metadata":{"id":"Nzuh1wzTsT67","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1757996431265,"user_tz":-540,"elapsed":92,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"74b8337a-27a5-4167-f93c-20225468301f"},"execution_count":57,"outputs":[{"output_type":"display_data","data":{"text/plain":["(1000, 7)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["    사원번호         부서 성과등급         연봉  근속연수  교육참가횟수  만족도\n","0  E0001  Marketing    B   73200000  14.0       5  6.0\n","1  E0002         IR    A   95100000   3.0       4  9.0\n","2  E0003    Manager    B   44700000   5.0       2  8.0\n","3  E0004         IR    B  122100000  16.0       3  8.0\n","4  E0005         IR    C   66000000   NaN       4  8.0"],"text/html":["\n","  <div id=\"df-cd170b19-a8c2-436e-8aa8-da1e892d8399\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>사원번호</th>\n","      <th>부서</th>\n","      <th>성과등급</th>\n","      <th>연봉</th>\n","      <th>근속연수</th>\n","      <th>교육참가횟수</th>\n","      <th>만족도</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>E0001</td>\n","      <td>Marketing</td>\n","      <td>B</td>\n","      <td>73200000</td>\n","      <td>14.0</td>\n","      <td>5</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>E0002</td>\n","      <td>IR</td>\n","      <td>A</td>\n","      <td>95100000</td>\n","      <td>3.0</td>\n","      <td>4</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>E0003</td>\n","      <td>Manager</td>\n","      <td>B</td>\n","      <td>44700000</td>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>E0004</td>\n","      <td>IR</td>\n","      <td>B</td>\n","      <td>122100000</td>\n","      <td>16.0</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>E0005</td>\n","      <td>IR</td>\n","      <td>C</td>\n","      <td>66000000</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd170b19-a8c2-436e-8aa8-da1e892d8399')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd170b19-a8c2-436e-8aa8-da1e892d8399 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd170b19-a8c2-436e-8aa8-da1e892d8399');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-86932258-f1e4-42cf-8a1a-4cd001f6bcb6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-86932258-f1e4-42cf-8a1a-4cd001f6bcb6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-86932258-f1e4-42cf-8a1a-4cd001f6bcb6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc0ac\\uc6d0\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"E0002\",\n          \"E0005\",\n          \"E0003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubd80\\uc11c\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Marketing\",\n          \"IR\",\n          \"Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\uacfc\\ub4f1\\uae09\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5f0\\ubd09\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29531796,\n        \"min\": 44700000,\n        \"max\": 122100000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          95100000,\n          66000000,\n          44700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uadfc\\uc18d\\uc5f0\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.454972243679028,\n        \"min\": 3.0,\n        \"max\": 16.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3.0,\n          16.0,\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad50\\uc721\\ucc38\\uac00\\ud69f\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub9cc\\uc871\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0954451150103321,\n        \"min\": 6.0,\n        \"max\": 9.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          6.0,\n          9.0,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# 만족도 결측치 평균대체\n","df['만족도'] = df['만족도'].fillna(df['만족도'].mean())\n","\n","# 근속연수 결측치 대체\n","mean_year_grouped = df.groupby(['부서','성과등급'])['근속연수'].transform('mean')\n","mean_year_grouped = mean_year_grouped.astype(int)\n","df['근속연수'] = df['근속연수'].fillna(mean_year_grouped)\n","\n","# 연봉_근속_ratio\n","df['연봉_근속_ratio'] = df['연봉'] / df['근속연수']\n","t1 = df.sort_values('연봉_근속_ratio', ascending=False)\n","print('연봉 / 근속연수 값이 세번째로 큰 직원의 근속연수 = ', int(t1[['근속연수']].iloc[2]) )  #1\n","\n","# 연봉_만족도_ratio\n","df['연봉_만족도_ratio'] = df['연봉'] / df['만족도']\n","t2 = df.sort_values('연봉_만족도_ratio', ascending=False)\n","print('연봉 / 만족도 값이 두번째로 큰 직원의 교육 참가횟수 = ', int(t2[['교육참가횟수']].iloc[1]))  #6\n","\n","print('정답 = ', 7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mSzYFahnMwi3","executionInfo":{"status":"ok","timestamp":1757996431294,"user_tz":-540,"elapsed":31,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"7b34175c-77c8-40b1-d6dc-f133d1abbf32"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["연봉 / 근속연수 값이 세번째로 큰 직원의 근속연수 =  1\n","연봉 / 만족도 값이 두번째로 큰 직원의 교육 참가횟수 =  6\n","정답 =  7\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-418132547.py:12: FutureWarning: Calling int on a single element Series is deprecated and will raise a TypeError in the future. Use int(ser.iloc[0]) instead\n","  print('연봉 / 근속연수 값이 세번째로 큰 직원의 근속연수 = ', int(t1[['근속연수']].iloc[2]) )  #1\n","/tmp/ipython-input-418132547.py:17: FutureWarning: Calling int on a single element Series is deprecated and will raise a TypeError in the future. Use int(ser.iloc[0]) instead\n","  print('연봉 / 만족도 값이 두번째로 큰 직원의 교육 참가횟수 = ', int(t2[['교육참가횟수']].iloc[1]))  #6\n"]}]},{"cell_type":"markdown","source":["---\n","#### 작업형 2-1. 농작물에서 농약 검출여부를 예측하라\n","- 타겟 : 농약검출여부 (0:미검출, 1:검출, 2:재검사 필요)\n","- 평가 : F1 score macro\n","- 제출 : result.csv (pred)\n","---"],"metadata":{"id":"UqHeDxPorc2P"}},{"cell_type":"code","source":["train = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/farm_train.csv\")\n","test = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/farm_test.csv\")\n","display(train.shape, test.shape, train.head(2), test.head(2))\n","\n","################### EDA ###################################################################################################\n","# 수치형, 범주형 변수 혼재. 결측치 없음\n","# train/test 간 범주형 변수들의 카테고리 종류는 동일\n","###################################################################################################\n","\n","# 1. 타겟분리\n","y = train['농약검출여부']\n","train = train.drop('농약검출여부', axis=1)\n","\n","# 2. 수치형변수 스케일링\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler\n","scaler = RobustScaler()\n","num_cols = ['농업면적', '연도', '비료사용량', '비료잔여량']\n","train[num_cols] = scaler.fit_transform(train[num_cols])\n","test[num_cols] = scaler.transform(test[num_cols])\n","\n","# 3. 범주형변수 원-핫 인코딩\n","train = pd.get_dummies(train)\n","test = pd.get_dummies(test)\n","\n","# 4. 검증데이터 분리\n","from sklearn.model_selection import train_test_split\n","X_train, X_valid, y_train, y_valid = train_test_split(train, y, test_size=0.2, random_state=42)\n","\n","# 5. model, eval\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import f1_score\n","model = RandomForestClassifier(random_state=120)\n","model.fit(X_train, y_train)\n","\n","model_pred = model.predict(X_valid)\n","score = f1_score(y_valid, model_pred, average='macro')\n","print('f1 macro score = ', score)"],"metadata":{"id":"B2DpXFgErvCB","colab":{"base_uri":"https://localhost:8080/","height":263},"executionInfo":{"status":"ok","timestamp":1757996432349,"user_tz":-540,"elapsed":1063,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"39eb9f2c-fa12-435f-e656-5408a47336e3"},"execution_count":59,"outputs":[{"output_type":"display_data","data":{"text/plain":["(4000, 9)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["(1000, 8)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["           농업면적    연도  지역       비료사용량        비료잔여량 작물종류 토양유형  농약검출여부 등급\n","0  20079.652837  2004  대구  407.985516   146.290507   보리   점토       2  C\n","1  73858.643204  2012  울산  221.229692  1967.333638    밀   점토       0  B"],"text/html":["\n","  <div id=\"df-170f3b68-8b25-4830-8095-a5b0ac28f547\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>농업면적</th>\n","      <th>연도</th>\n","      <th>지역</th>\n","      <th>비료사용량</th>\n","      <th>비료잔여량</th>\n","      <th>작물종류</th>\n","      <th>토양유형</th>\n","      <th>농약검출여부</th>\n","      <th>등급</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20079.652837</td>\n","      <td>2004</td>\n","      <td>대구</td>\n","      <td>407.985516</td>\n","      <td>146.290507</td>\n","      <td>보리</td>\n","      <td>점토</td>\n","      <td>2</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>73858.643204</td>\n","      <td>2012</td>\n","      <td>울산</td>\n","      <td>221.229692</td>\n","      <td>1967.333638</td>\n","      <td>밀</td>\n","      <td>점토</td>\n","      <td>0</td>\n","      <td>B</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-170f3b68-8b25-4830-8095-a5b0ac28f547')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-170f3b68-8b25-4830-8095-a5b0ac28f547 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-170f3b68-8b25-4830-8095-a5b0ac28f547');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d6d72a24-531b-447c-94e4-2c1afdc0a077\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6d72a24-531b-447c-94e4-2c1afdc0a077')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d6d72a24-531b-447c-94e4-2c1afdc0a077 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print('f1 macro score = ', score)\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"\\ub18d\\uc5c5\\uba74\\uc801\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38027.48877389347,\n        \"min\": 20079.652837150366,\n        \"max\": 73858.64320418113,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          73858.64320418113,\n          20079.652837150366\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2004,\n        \"max\": 2012,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2012,\n          2004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc5ed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\uc6b8\\uc0b0\",\n          \"\\ub300\\uad6c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ube44\\ub8cc\\uc0ac\\uc6a9\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132.05630904727332,\n        \"min\": 221.22969237689523,\n        \"max\": 407.985515628482,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          221.22969237689523,\n          407.985515628482\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ube44\\ub8cc\\uc794\\uc5ec\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1287.6719461547937,\n        \"min\": 146.29050742672482,\n        \"max\": 1967.333637566192,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1967.333637566192,\n          146.29050742672482\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc791\\ubb3c\\uc885\\ub958\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\ubc00\",\n          \"\\ubcf4\\ub9ac\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud1a0\\uc591\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc810\\ud1a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub18d\\uc57d\\uac80\\ucd9c\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub4f1\\uae09\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["           농업면적    연도  지역       비료사용량        비료잔여량 작물종류 토양유형 등급\n","0  43284.730127  2008  울산  138.767165   415.437269   보리   점토  B\n","1  97624.943779  2014  충북  373.560368  2809.120053   보리   양토  A"],"text/html":["\n","  <div id=\"df-f482d9c5-660b-4fd9-8ee1-851639bf0c8e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>농업면적</th>\n","      <th>연도</th>\n","      <th>지역</th>\n","      <th>비료사용량</th>\n","      <th>비료잔여량</th>\n","      <th>작물종류</th>\n","      <th>토양유형</th>\n","      <th>등급</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>43284.730127</td>\n","      <td>2008</td>\n","      <td>울산</td>\n","      <td>138.767165</td>\n","      <td>415.437269</td>\n","      <td>보리</td>\n","      <td>점토</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>97624.943779</td>\n","      <td>2014</td>\n","      <td>충북</td>\n","      <td>373.560368</td>\n","      <td>2809.120053</td>\n","      <td>보리</td>\n","      <td>양토</td>\n","      <td>A</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f482d9c5-660b-4fd9-8ee1-851639bf0c8e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f482d9c5-660b-4fd9-8ee1-851639bf0c8e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f482d9c5-660b-4fd9-8ee1-851639bf0c8e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fd215af7-c77b-47c8-b61f-3563076b868b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd215af7-c77b-47c8-b61f-3563076b868b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fd215af7-c77b-47c8-b61f-3563076b868b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print('f1 macro score = ', score)\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"\\ub18d\\uc5c5\\uba74\\uc801\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38424.333564455075,\n        \"min\": 43284.73012703652,\n        \"max\": 97624.94377903662,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          97624.94377903662,\n          43284.73012703652\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 2008,\n        \"max\": 2014,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2014,\n          2008\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc5ed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\ucda9\\ubd81\",\n          \"\\uc6b8\\uc0b0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ube44\\ub8cc\\uc0ac\\uc6a9\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 166.02386558027217,\n        \"min\": 138.76716512931364,\n        \"max\": 373.5603675105422,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          373.5603675105422,\n          138.76716512931364\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ube44\\ub8cc\\uc794\\uc5ec\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1692.589328542638,\n        \"min\": 415.4372687886551,\n        \"max\": 2809.120052741624,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2809.120052741624,\n          415.4372687886551\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc791\\ubb3c\\uc885\\ub958\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\ubcf4\\ub9ac\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud1a0\\uc591\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\uc591\\ud1a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub4f1\\uae09\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["f1 macro score =  0.8639331265829268\n"]}]},{"cell_type":"code","source":["# LGBM\n","from lightgbm import LGBMClassifier\n","model2 = LGBMClassifier(random_state=120)\n","model2.fit(X_train, y_train)\n","\n","model2_pred = model2.predict(X_valid)\n","score = f1_score(y_valid, model2_pred, average='macro')\n","print('f1 macro score = ', score)\n","\n","# submit\n","pred = model2.predict(test)\n","result = pd.DataFrame({\n","    'pred':pred\n","})\n","result.to_csv('result.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tyY6P37DTzcA","executionInfo":{"status":"ok","timestamp":1757996433282,"user_tz":-540,"elapsed":935,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"aa5d5757-243a-48f8-a67a-38cc1d4a912c"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000171 seconds.\n","You can set `force_row_wise=true` to remove the overhead.\n","And if memory is not enough, you can set `force_col_wise=true`.\n","[LightGBM] [Info] Total Bins 837\n","[LightGBM] [Info] Number of data points in the train set: 3200, number of used features: 28\n","[LightGBM] [Info] Start training from score -0.839619\n","[LightGBM] [Info] Start training from score -2.704930\n","[LightGBM] [Info] Start training from score -0.690650\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","f1 macro score =  0.900873951535456\n"]}]},{"cell_type":"markdown","source":["---\n","#### 작업형 3-1. 다중회귀\n","- id를 기준으로 140 이하는 train, 초과는 test로 분리하라\n","1. train에서 c1,c2,c3,c4,c5를 독립변수로 - design을 종속변수로 하는 모델을 만들고, 절편을 제외한 독립변수 중 p값이 0.05보다 작은 변수의 갯수를 구하라\n","2. 위 모델의 결과에서 p값이 0.05 이하인 독립변수만을 선택하여 새로운 모델을 만들고, train 데이터에서 design의 예측값을 산축하고 예측값과 실제값 사이의 피어슨 상관계수를 구하라 (반올림, 소수3자리)\n","3. 위 모델로 test 데이터의 design 예측값을 산출, 예측값과 실제값 사이의 RMSE를 구하라 (반올림, 소수3자리)\n","---"],"metadata":{"id":"h37zAohmsfVc"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/design.csv\")\n","display(df.shape, df.head())"],"metadata":{"id":"sNTRT2Z7tb7F","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1757996661635,"user_tz":-540,"elapsed":51,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"6554b77a-89fb-4ac6-e3a6-6612c29e6c81"},"execution_count":69,"outputs":[{"output_type":"display_data","data":{"text/plain":["(200, 7)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   id     design        c1        c2        c3        c4        c5\n","0   1  58.962471  0.374540  0.642032  0.103124  0.168935  0.707239\n","1   2  42.006534  0.950714  0.084140  0.902553  0.278590  0.152539\n","2   3  55.831980  0.731994  0.161629  0.505252  0.177010  0.576288\n","3   4  64.458592  0.598658  0.898554  0.826457  0.088703  0.606715\n","4   5  61.342792  0.156019  0.606429  0.320050  0.120636  0.424131"],"text/html":["\n","  <div id=\"df-29b183da-98b7-4ccd-8920-0ea37811bc54\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>design</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","      <th>c4</th>\n","      <th>c5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>58.962471</td>\n","      <td>0.374540</td>\n","      <td>0.642032</td>\n","      <td>0.103124</td>\n","      <td>0.168935</td>\n","      <td>0.707239</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>42.006534</td>\n","      <td>0.950714</td>\n","      <td>0.084140</td>\n","      <td>0.902553</td>\n","      <td>0.278590</td>\n","      <td>0.152539</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>55.831980</td>\n","      <td>0.731994</td>\n","      <td>0.161629</td>\n","      <td>0.505252</td>\n","      <td>0.177010</td>\n","      <td>0.576288</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>64.458592</td>\n","      <td>0.598658</td>\n","      <td>0.898554</td>\n","      <td>0.826457</td>\n","      <td>0.088703</td>\n","      <td>0.606715</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>61.342792</td>\n","      <td>0.156019</td>\n","      <td>0.606429</td>\n","      <td>0.320050</td>\n","      <td>0.120636</td>\n","      <td>0.424131</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29b183da-98b7-4ccd-8920-0ea37811bc54')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-29b183da-98b7-4ccd-8920-0ea37811bc54 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-29b183da-98b7-4ccd-8920-0ea37811bc54');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ee59b2df-07a1-4522-9b83-694077caf1be\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee59b2df-07a1-4522-9b83-694077caf1be')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ee59b2df-07a1-4522-9b83-694077caf1be button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"design\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.708620366743729,\n        \"min\": 42.00653449906866,\n        \"max\": 64.45859175395192,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          42.00653449906866,\n          61.3427919130545,\n          55.83198049120151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30874824961862174,\n        \"min\": 0.1560186404424365,\n        \"max\": 0.9507143064099162,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9507143064099162,\n          0.1560186404424365,\n          0.7319939418114051\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34477572342615803,\n        \"min\": 0.0841399649950488,\n        \"max\": 0.8985541885270792,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0841399649950488,\n          0.6064290596595899,\n          0.1616287140946137\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.336744147863729,\n        \"min\": 0.1031238688359326,\n        \"max\": 0.9025529066795668,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9025529066795668,\n          0.3200496010306117,\n          0.5052523724478571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07217380108882604,\n        \"min\": 0.0887025337570556,\n        \"max\": 0.2785903390319586,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2785903390319586,\n          0.1206358711006008,\n          0.1770104842767468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21588316974645236,\n        \"min\": 0.1525390429142613,\n        \"max\": 0.7072386343133986,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.1525390429142613,\n          0.424130671302386,\n          0.5762883601668132\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# train/test 분리\n","train = df[df['id'] <= 140]\n","test = df[df['id'] > 140]\n","# model\n","from statsmodels.formula.api import ols, logit\n","model = ols('design ~ c1 + c2 + c3 + c4 + c5', data=train).fit()\n","print(model.summary())\n","\n","print('1.독립변수 중 p값이 0.05보다 작은 변수의 갯수= ', 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qnPytEzFYBD4","executionInfo":{"status":"ok","timestamp":1757996821280,"user_tz":-540,"elapsed":45,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"dd52810b-c51a-43bb-8615-d4ba62446819"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 design   R-squared:                       0.266\n","Model:                            OLS   Adj. R-squared:                  0.238\n","Method:                 Least Squares   F-statistic:                     9.697\n","Date:                Tue, 16 Sep 2025   Prob (F-statistic):           6.37e-08\n","Time:                        04:27:01   Log-Likelihood:                -468.72\n","No. Observations:                 140   AIC:                             949.4\n","Df Residuals:                     134   BIC:                             967.1\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     53.0220      2.294     23.112      0.000      48.485      57.559\n","c1            -4.9403      2.008     -2.460      0.015      -8.912      -0.969\n","c2            11.3795      2.045      5.564      0.000       7.335      15.424\n","c3             2.6960      1.920      1.404      0.163      -1.101       6.493\n","c4             5.7978      2.176      2.664      0.009       1.494      10.102\n","c5            -1.5018      2.067     -0.726      0.469      -5.590       2.587\n","==============================================================================\n","Omnibus:                        3.969   Durbin-Watson:                   2.052\n","Prob(Omnibus):                  0.137   Jarque-Bera (JB):                3.019\n","Skew:                           0.227   Prob(JB):                        0.221\n","Kurtosis:                       2.441   Cond. No.                         7.68\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","1.독립변수 중 p값이 0.05보다 작은 변수의 갯수=  3\n"]}]},{"cell_type":"code","source":["# new model\n","model = ols('design ~ c1 + c2 + c4 ', data=train).fit()\n","print(model.summary())\n","\n","#design의 예측값,  실제-예측 상관관계\n","train['design_pred'] = model.predict(train)\n","corr = train['design'].corr(train['design_pred'])\n","print('2.design의 예측값과 실제값 사이의 피어슨 상관계수 = ', round(corr,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Puq1VwCcxrp_","executionInfo":{"status":"ok","timestamp":1757997396103,"user_tz":-540,"elapsed":28,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"90d3c1bf-9d4e-4f85-c6a0-30a2351cd02d"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 design   R-squared:                       0.251\n","Model:                            OLS   Adj. R-squared:                  0.234\n","Method:                 Least Squares   F-statistic:                     15.17\n","Date:                Tue, 16 Sep 2025   Prob (F-statistic):           1.43e-08\n","Time:                        04:36:36   Log-Likelihood:                -470.14\n","No. Observations:                 140   AIC:                             948.3\n","Df Residuals:                     136   BIC:                             960.0\n","Df Model:                           3                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     53.6637      1.808     29.686      0.000      50.089      57.239\n","c1            -4.8767      2.010     -2.426      0.017      -8.852      -0.901\n","c2            11.1863      2.039      5.487      0.000       7.154      15.218\n","c4             6.2272      2.159      2.885      0.005       1.958      10.496\n","==============================================================================\n","Omnibus:                        3.056   Durbin-Watson:                   1.972\n","Prob(Omnibus):                  0.217   Jarque-Bera (JB):                2.947\n","Skew:                           0.296   Prob(JB):                        0.229\n","Kurtosis:                       2.606   Cond. No.                         5.96\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","2.design의 예측값과 실제값 사이의 피어슨 상관계수 =  0.501\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-3389232580.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  train['design_pred'] = model.predict(train)\n"]}]},{"cell_type":"code","source":["test['design_pred'] = model.predict(test)\n","from sklearn.metrics import root_mean_squared_error\n","score = root_mean_squared_error(test['design'], test['design_pred'])\n","print('3.test 데이터의 design 예측값과 실제값 사이의 RMSE = ', round(score,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YZ8qMac90AxX","executionInfo":{"status":"ok","timestamp":1757997599763,"user_tz":-540,"elapsed":25,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"e756fc41-187e-49f3-e4d3-b30920d416cf"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["3.test 데이터의 design 예측값과 실제값 사이의 RMSE =  8.488\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-3993858876.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test['design_pred'] = model.predict(test)\n"]}]},{"cell_type":"markdown","source":["---\n","#### 작업형 3-2. 로지스틱 회귀\n","- 종속변수: Churn (0:유지, 1:이탈)\n","- 독립변수: MonthlyCharges, CustomerTenure, HasPhoneService, HasTechinsurance\n","1. 고객이탈을 예측하는 로지스틱 모형을 만들고, MonthlyCharges의 p값을 구하라 (반올림, 소수 3자리)\n","2. 위 모델로 전화 서비스를 받지 않은 고객이 이탈할 확률 대비 전화 서비스를 받은 고객이 이탈할 확률에 대한 오즈비를 계산하라 (반올림, 소수 3자리)\n","3. 위 모델에서 각 고객의 이탈확률을 예측한 후, 예측된 이탈확률이 0.3을 초과하는 고객수를 구하라"],"metadata":{"id":"XweghfvwtiNX"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/main/part4/ch9/retention.csv\")\n","display(df.shape, df.head())"],"metadata":{"id":"9glVVHpFuWEq","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1757997628106,"user_tz":-540,"elapsed":173,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"9cc9eb86-235c-480f-81e0-0b5c6563f7a8"},"execution_count":86,"outputs":[{"output_type":"display_data","data":{"text/plain":["(80, 6)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   CustomerID  MonthlyCharges  CustomerTenure  HasPhoneService  \\\n","0           1       77.450712              47                1   \n","1           2       67.926035              68                1   \n","2           3       79.715328              45                0   \n","3           4       92.845448               2                1   \n","4           5       66.487699              27                1   \n","\n","   HasTechInsurance  Churn  \n","0                 1      1  \n","1                 1      0  \n","2                 1      1  \n","3                 0      1  \n","4                 1      0  "],"text/html":["\n","  <div id=\"df-b96b3282-1747-456d-b2fe-3f08588e5131\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>MonthlyCharges</th>\n","      <th>CustomerTenure</th>\n","      <th>HasPhoneService</th>\n","      <th>HasTechInsurance</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>77.450712</td>\n","      <td>47</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>67.926035</td>\n","      <td>68</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>79.715328</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>92.845448</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>66.487699</td>\n","      <td>27</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b96b3282-1747-456d-b2fe-3f08588e5131')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b96b3282-1747-456d-b2fe-3f08588e5131 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b96b3282-1747-456d-b2fe-3f08588e5131');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-41f882c8-a563-4dca-9b23-71a97e0e6064\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41f882c8-a563-4dca-9b23-71a97e0e6064')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-41f882c8-a563-4dca-9b23-71a97e0e6064 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MonthlyCharges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.623483283031838,\n        \"min\": 66.48769937914996,\n        \"max\": 92.84544784612038,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          67.92603548243223,\n          66.48769937914996,\n          79.71532807151038\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerTenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 2,\n        \"max\": 68,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          68,\n          27,\n          45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasPhoneService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasTechInsurance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Churn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["from statsmodels.formula.api import ols, logit\n","model = logit('Churn ~ MonthlyCharges + CustomerTenure + HasPhoneService + HasTechInsurance', data=df).fit()\n","print(model.summary())\n","\n","print('1.MonthlyCharges의 p값 = ',  0.008)\n","print('2.전화 서비스를 받은 고객이 이탈할 확률에 대한 오즈비 = ', round(np.exp(-0.3558),3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PsbD52YZ0vkG","executionInfo":{"status":"ok","timestamp":1757997855011,"user_tz":-540,"elapsed":28,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"0fffb20d-c0a6-485d-8e8a-3aa530ae0c3f"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["Optimization terminated successfully.\n","         Current function value: 0.582234\n","         Iterations 6\n","                           Logit Regression Results                           \n","==============================================================================\n","Dep. Variable:                  Churn   No. Observations:                   80\n","Model:                          Logit   Df Residuals:                       75\n","Method:                           MLE   Df Model:                            4\n","Date:                Tue, 16 Sep 2025   Pseudo R-squ.:                  0.1585\n","Time:                        04:44:14   Log-Likelihood:                -46.579\n","converged:                       True   LL-Null:                       -55.352\n","Covariance Type:            nonrobust   LLR p-value:                  0.001513\n","====================================================================================\n","                       coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------------\n","Intercept           -4.4731      1.437     -3.114      0.002      -7.289      -1.657\n","MonthlyCharges       0.0503      0.019      2.640      0.008       0.013       0.088\n","CustomerTenure       0.0428      0.014      3.016      0.003       0.015       0.071\n","HasPhoneService     -0.3558      0.525     -0.677      0.498      -1.386       0.674\n","HasTechInsurance    -0.4868      0.518     -0.940      0.347      -1.502       0.529\n","====================================================================================\n","1.MonthlyCharges의 p값 =  0.008\n","2.전화 서비스를 받은 고객이 이탈할 확률에 대한 오즈비 =  0.701\n"]}]},{"cell_type":"code","source":["df['churn_ratio'] = model.predict(df)\n","df_new = df[df['churn_ratio'] > 0.3 ]\n","print('3.이탈확률이 0.3을 초과하는 고객수 = ', len(df_new))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZugaEOWg1OOL","executionInfo":{"status":"ok","timestamp":1757998001447,"user_tz":-540,"elapsed":10,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"a739f36b-3372-4026-a9db-6accff5c67c6"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["3.이탈확률이 0.3을 초과하는 고객수 =  65\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"n3ESgF9h14eJ"},"execution_count":null,"outputs":[]}]}