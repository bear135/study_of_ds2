{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO34Npp38iGVW7h1u1GdUy1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import warnings\n","warnings.simplefilter(action='ignore')\n","data_path = \"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/type1_data1.csv\""],"metadata":{"id":"asU96rUFPnKE","executionInfo":{"status":"ok","timestamp":1757423992237,"user_tz":-540,"elapsed":490,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","print(df.shape)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"rKapZkSzcvd5","executionInfo":{"status":"ok","timestamp":1757423992584,"user_tz":-540,"elapsed":350,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"e2af9189-9772-4af3-f874-44d9be1ffb49"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["(120, 10)\n"]},{"output_type":"execute_result","data":{"text/plain":["     id   age city    f1  f2    f3    f4         f5  subscribed   views\n","0  id01   2.0   서울   NaN   0  gold  ENFJ  91.297791  2024-07-16  6820.0\n","1  id02   9.0   서울  70.0   1   NaN  ENFJ  60.339826  2024-05-12  2534.0\n","2  id03  27.0   서울  61.0   1  gold  ISTJ  17.252986  2024-03-16  7312.0\n","3  id04  75.0   서울   NaN   2   NaN  INFP  52.667078  2024-07-21   493.0\n","4  id05  24.0   서울  85.0   2   NaN  ISFJ  29.269869  2024-03-07  1338.0"],"text/html":["\n","  <div id=\"df-6b3f7111-ed0f-4651-8f07-6d46dc080a7b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2024-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2024-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2024-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2024-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2024-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b3f7111-ed0f-4651-8f07-6d46dc080a7b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b3f7111-ed0f-4651-8f07-6d46dc080a7b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b3f7111-ed0f-4651-8f07-6d46dc080a7b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c8c93f2c-ee7b-4473-a255-53daa9296f96\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8c93f2c-ee7b-4473-a255-53daa9296f96')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c8c93f2c-ee7b-4473-a255-53daa9296f96 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 120,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 118,\n        \"samples\": [\n          \"id56\",\n          \"id89\",\n          \"id05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.520825756766083,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          24.0,\n          83.6,\n          53.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.021141894228368,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          51.0,\n          24.0,\n          54.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33.034928410804625,\n        \"min\": 0.0,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"2024-09-24\",\n          \"2024-10-17\",\n          \"2024-10-27\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4121.626455600414,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 114,\n        \"samples\": [\n          5650.0,\n          1338.0,\n          5999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["---\n","### Summary\n","- Q05. 특정 문자열이 포함된 컬럼 추출 : df = df[df['f4'].str.contains('FJ', case=True, na=False)]\n","- Q11. 앞에서 부터 70% 구하기 : tmp = df.iloc[:int(len(df)*0.7)]\n","- Q12. 특정 컬럼에 대해서만 결측치 제거 : df = df.dropna(subset=['f1'])\n","- Q15. 문자형 컬럼만 선택하여 제거 :\n","> obj_cols = df.select_dtypes('object').columns  \n","> df = df.drop(obj_cols, axis=1)\n","- Q19. 결측치를 바로 뒤의 값으로 대체 : df = df.fillna(method='bfill')\n","- Q20. 날짜형으로 변환 후, 월별 합계 구하기 :\n","> df['subscribed']= pd.to_datetime(df['subscribed'])  \n","> df['month'] = df['subscribed'].dt.month  \n","> tmp = df.groupby('month').sum(numeric_only=True)  \n","- Q22. 경과시간 구하기\n","> df['주문시간'] = pd.to_datetime(df['주문시간'])  \n","> df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])  \n","> df['경과시간_분'] = (df['실제도착시간'] - df['주문시간']).dt.total_seconds()/60  \n","- 24. SQL subquery와 같은 방식 :  \n","> df_dist = df.groupby('user')['거리'].sum()  \n","> df_dist = df_dist[df_dist >= 50]  \n","> df = df[df['user'].isin(df_dist.index)]  \n","> df = df['결제종류'].value_counts().sort_values(ascending=False)  \n","> print('가장 빈도가 높은 결제방식의 수 = ', int(df.iloc[0]))\n","- Q29. 거리구간별 배달료 구하기 :\n","> def delivery_fee(x):  \n","  if x < 5:   \n","    return 2000   \n","  elif x < 10:   \n","    return 4000   \n","  elif x < 15:   \n","    return 6000   \n","  elif x < 20:   \n","    return 8000       \n","    \n","  > df['배달료'] = df['거리'].apply(delivery_fee)  \n","- Q33. 컬럼들의 값을 합치기 :\n","> df_melt = df.melt(id_vars='이름', value_vars=['수학','영어','국어'])  \n","- Q36. 결측치를 각 그룹의 평균으로 대체 :\n","> area_mean = df.groupby('지역코드')['판매금액'].transform('mean').\n","- Q37. 매장별 평일-주말 매출합계 차이(unstack) :\n","> df = df.groupby(['매장코드','구분'])['매출액'].sum().unstack().reset_index()  \n","> df['매출차이'] = abs(df['주말']-df['평일'])    \n","- Q39. 컬럼 합치기(melt) :\n","> df_melt = pd.melt(df, id_vars = 'Region', value_vars=['Jan','Feb','Mar'], var_name='Month', value_name='Sales')\n","---"],"metadata":{"id":"QJezATTXZgv6"}},{"cell_type":"markdown","source":["문제 01\n","1. f5컬럼이 0이 아닌 데이터(행)을 구하시오\n","2. 앞에서 구한 데이터에 views 컬럼 결측치를 views 컬럼의 최소값으로 채우시오\n","3. views 컬럼의 중앙값을 정수로 구하시오  "],"metadata":{"id":"dI3YVHBvdB7Z"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df[df['f5'] !=0]\n","df['views'] = df['views'].fillna(df['views'].min())\n","int(df['views'].median())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"084EEUTLc0an","executionInfo":{"status":"ok","timestamp":1757423992691,"user_tz":-540,"elapsed":108,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"f5fb0d49-7070-4ccb-f899-76f72ea05901"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5924"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["문제 02\n","1. subscribed 컬럼의 가장 빈도수가 많은 날짜는?\n","2. 앞에서 구한 날짜의 일(day) 값을 정수로 구하라"],"metadata":{"id":"NyJAIKc9enwR"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df['subscribed'].value_counts().sort_values(ascending=False)\n","print(df.index[0])\n","print(int(df.index[0][-2:]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFR3rEqZd7S2","executionInfo":{"status":"ok","timestamp":1757423992790,"user_tz":-540,"elapsed":93,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"7ba529de-0940-4007-a0b7-f2533387d685"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["2025-02-17\n","17\n"]}]},{"cell_type":"markdown","source":["문제 03\n","1. 결측치가 있는 데이터를 제거하라\n","2. views 컬럼을 f1 컬럼으로 나눈 값을 새로운 컬럼으로 추가하라\n","3. 새로운 컬럼 값 중 가장 큰 값을 가진 행의 age를 정수로 구하라"],"metadata":{"id":"hpQ6UnrugsrF"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df.dropna()\n","df['new_col'] = df['views'] / df['f1']\n","df = df[df['new_col'] == df['new_col'].max() ]\n","print(int(df['age']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Av_JbglLfYpD","executionInfo":{"status":"ok","timestamp":1757423992813,"user_tz":-540,"elapsed":26,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"eaf0033b-f9c5-41da-aaf7-14ada11e82d4"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["22\n"]}]},{"cell_type":"markdown","source":["문제 04\n","1. views 컬럼의 결측치를 0으로 대체하라\n","2. viwes 컬럼의 상위 10번째 값을 구하라\n","3. views 컬럼에서 상위 10개 값을 상위 10번쩨 값으로 대체하라\n","4. views 컬럼의 전체 합을 정수로 구하라"],"metadata":{"id":"dOzhjgXIiT6q"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df['views'] = df['views'].fillna(0)\n","df = df.sort_values('views', ascending=False)\n","print(\"views 컬럼의 상위 10번째 값 = \", df.iloc[9]['views'])\n","top10_value = df.iloc[9]['views']\n","df.loc[df.index[:10], 'views'] = top10_value\n","print(\"views 컬럼의 전체 합 = \", int(df['views'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EprJxXcbhRQe","executionInfo":{"status":"ok","timestamp":1757423992877,"user_tz":-540,"elapsed":63,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"c269a1c8-3a5d-453d-e5b2-fafc1148afc3"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["views 컬럼의 상위 10번째 값 =  9877.0\n","views 컬럼의 전체 합 =  652812\n"]}]},{"cell_type":"markdown","source":["문제 05\n","1. f4컬럼 데이터에 FJ가 포함된 데이터를 찾아라\n","2. 찾은 데이터 중 f2컬럼의 평균값을 구하라 (소수 2째자리 반올림)"],"metadata":{"id":"Nr8R6QGK-Iks"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","#df = df[df['f4'].str[-2:] == 'FJ']\n","df = df[df['f4'].str.contains('FJ', case=True, na=False)]\n","print(\"f2컬럼의 평균값 = \", round(df['f2'].mean(),2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GILCq7Camn07","executionInfo":{"status":"ok","timestamp":1757423992924,"user_tz":-540,"elapsed":43,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"1cbec3a7-0597-4f0a-c653-db1943fff54e"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["f2컬럼의 평균값 =  0.61\n"]}]},{"cell_type":"markdown","source":["문제 06\n","1. f3컬럼이 gold이면서 f2컬럼이 2인 데이터를 찾아라\n","2. 찾은 데이터에서 f1컬럼의 분산을 구하라 (소수 2자리 반올림)"],"metadata":{"id":"MP7i2VaHAEu9"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df[(df['f3'] == 'gold') & (df['f2'] == 2)]\n","round(df['f1'].var(), 2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iw2ZGASsoYVe","executionInfo":{"status":"ok","timestamp":1757423992999,"user_tz":-540,"elapsed":74,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"255f13fc-f6c0-4417-cf3b-ffe95413caf1"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["235.43"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["문제 07\n","1. 모든 나이에 1을 더하라\n","2. 20대의 views 평균과 30대의 views 평균 차이의 절대값을 구하라 (소수 2자리 반올림)"],"metadata":{"id":"2bnE_y06LT0k"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df['age'] = df['age'] +1\n","mean_views_20 = df[(df['age'] >= 20) & (df['age'] <30 )]['views'].mean()\n","mean_views_30 = df[(df['age'] >= 30) & (df['age'] <40 )]['views'].mean()\n","print(round(abs(mean_views_20 - mean_views_30), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CD0Q2V-uAb4k","executionInfo":{"status":"ok","timestamp":1757423993010,"user_tz":-540,"elapsed":11,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"fe0ccf93-4192-4bb6-84f1-c9cab45b9635"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["263.13\n"]}]},{"cell_type":"markdown","source":["문제 08\n","1. subscribed 컬럼이 2024년 2월인 데이터를 찾아라\n","2. 위에서 f3컬럼이 gold인 데이터의 갯수는?"],"metadata":{"id":"Qcxic5yjM0AC"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df[df['subscribed'].str[:7]== '2024-02']\n","print(\"f3컬럼이 gold인 데이터의 갯수 = \",df[df['f3']=='gold'].shape[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T-Y0Cf2yLoSN","executionInfo":{"status":"ok","timestamp":1757423993073,"user_tz":-540,"elapsed":61,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"bf4caa22-a9fe-44e1-82c5-2018bd1e7e53"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["f3컬럼이 gold인 데이터의 갯수 =  5\n"]}]},{"cell_type":"markdown","source":["문제 09\n","1. views 컬럼값이 1000 이하인 데이터(결측치 제외)를 찾아라\n","2. 앞의 데이터에서 'f4'컬럼의 최빈값은?"],"metadata":{"id":"Y66bX_FeQkNf"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df[df['views']<= 1000]\n","print(\"'f4'컬럼의 최빈값 = \",df['f4'].mode()[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FV_dIL33QQSx","executionInfo":{"status":"ok","timestamp":1757423993111,"user_tz":-540,"elapsed":39,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"bae40a2a-98bd-4715-f188-db3aee69e729"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["'f4'컬럼의 최빈값 =  ISFJ\n"]}]},{"cell_type":"markdown","source":["문제 10\n","1. 결측치가 있는 행을 삭제하라\n","2. 위 데이터에서 지역별(city) 평균을 구하라\n","3. 앞에서 계산한 지역별 평균 데이터에서 f2컬럼 값이 가장 큰 지역은?"],"metadata":{"id":"Tp3Q7Uu7RS-7"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df.dropna()\n","tmp = df.groupby('city').mean(numeric_only=True)\n","display(tmp)\n","\n","tmp = tmp[tmp['f2'] == tmp['f2'].max()]\n","print('f2컬럼 값이 가장 큰 지역 = ', tmp.index[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"55Ny-3oTRGAg","executionInfo":{"status":"ok","timestamp":1757423993216,"user_tz":-540,"elapsed":106,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"9066a713-61a9-42f7-c172-a98d94074016"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["            age         f1        f2         f5        views\n","city                                                        \n","경기    48.704000  61.360000  0.760000  52.106731  8127.880000\n","대구    49.773333  66.200000  0.666667  27.370166  6819.133333\n","부산    35.075000  65.875000  0.687500  38.638715  6945.437500\n","서울    38.000000  60.142857  0.785714  41.122705  7369.142857"],"text/html":["\n","  <div id=\"df-85d58365-86b7-41c7-a25f-6f9715991ee6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f5</th>\n","      <th>views</th>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>경기</th>\n","      <td>48.704000</td>\n","      <td>61.360000</td>\n","      <td>0.760000</td>\n","      <td>52.106731</td>\n","      <td>8127.880000</td>\n","    </tr>\n","    <tr>\n","      <th>대구</th>\n","      <td>49.773333</td>\n","      <td>66.200000</td>\n","      <td>0.666667</td>\n","      <td>27.370166</td>\n","      <td>6819.133333</td>\n","    </tr>\n","    <tr>\n","      <th>부산</th>\n","      <td>35.075000</td>\n","      <td>65.875000</td>\n","      <td>0.687500</td>\n","      <td>38.638715</td>\n","      <td>6945.437500</td>\n","    </tr>\n","    <tr>\n","      <th>서울</th>\n","      <td>38.000000</td>\n","      <td>60.142857</td>\n","      <td>0.785714</td>\n","      <td>41.122705</td>\n","      <td>7369.142857</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85d58365-86b7-41c7-a25f-6f9715991ee6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-85d58365-86b7-41c7-a25f-6f9715991ee6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-85d58365-86b7-41c7-a25f-6f9715991ee6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e06465a8-043a-4518-a41b-9a5df8472400\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e06465a8-043a-4518-a41b-9a5df8472400')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e06465a8-043a-4518-a41b-9a5df8472400 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_89c59a28-ed8c-4ff8-9b8d-faa8c01ea2cc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tmp')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_89c59a28-ed8c-4ff8-9b8d-faa8c01ea2cc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tmp');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tmp","summary":"{\n  \"name\": \"tmp\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\",\n          \"\\uacbd\\uae30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.44242756281697,\n        \"min\": 35.075,\n        \"max\": 49.77333333333333,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          49.77333333333333,\n          38.0,\n          48.70399999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0949465270182035,\n        \"min\": 60.142857142857146,\n        \"max\": 66.2,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          66.2,\n          60.142857142857146,\n          61.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.056921726152351235,\n        \"min\": 0.6666666666666666,\n        \"max\": 0.7857142857142857,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6666666666666666,\n          0.7857142857142857,\n          0.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.14978105235893,\n        \"min\": 27.370165778666667,\n        \"max\": 52.10673080484,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          27.370165778666667,\n          41.12270523221429,\n          52.10673080484\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 590.526573191142,\n        \"min\": 6819.133333333333,\n        \"max\": 8127.88,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6819.133333333333,\n          7369.142857142857,\n          8127.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["f2컬럼 값이 가장 큰 지역 =  서울\n"]}]},{"cell_type":"markdown","source":["문제 11\n","1. 데이터에서 결측치가 있는 행을 모두 제거하라\n","2. 위 데이터에서 앞에서 부터 70%의 데이터를 구하라\n","3. 위의 70% 데이터 중 views 컬럼의 3사분위수에서 1사분위수를 뺀 값을 정수로 구하라"],"metadata":{"id":"SBN0bUcpTBXo"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df.dropna()\n","tmp = df.iloc[:int(len(df)*0.7)]\n","print(\"views 컬럼의 3사분위수에서 1사분위수를 뺀 값 = \", int(tmp['views'].quantile(0.75) - tmp['views'].quantile(0.25)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zNvmBodNS_2J","executionInfo":{"status":"ok","timestamp":1757423993298,"user_tz":-540,"elapsed":82,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"b82facfd-b0dc-4f41-8530-62cea11ab3f1"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["views 컬럼의 3사분위수에서 1사분위수를 뺀 값 =  2771\n"]}]},{"cell_type":"markdown","source":["문제 12\n","1. 결측치가 가장 많은 두 컬럼을 찾아라\n","2. 첫번째로 결측치가 많은 컬럼에서 결측치가 있는 행을 삭제하라\n","3. 두번째로 결측치가 많은 컬럼을 최빈값으로 대체하라\n","4. f3컬럼의 gold값을 가진 데이터 수를 정수로 구하라"],"metadata":{"id":"At8-htSmXMXW"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df.isnull().sum()\n","print('결측치가 많은 컬럼 : ', 'f1', 'f3')\n","df = df.dropna(subset=['f1'])\n","df['f3'] = df['f3'].fillna(df['f3'].mode()[0])\n","print('f3컬럼의 gold값을 가진 데이터 수 = ',int(df[df['f3']=='gold'].shape[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Uo4r2oUV5ZX","executionInfo":{"status":"ok","timestamp":1757423993339,"user_tz":-540,"elapsed":41,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"2d078e6d-e793-4cb0-e119-7754b7d95e5b"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["결측치가 많은 컬럼 :  f1 f3\n","f3컬럼의 gold값을 가진 데이터 수 =  63\n"]}]},{"cell_type":"markdown","source":["문제 13\n","1. f1컬럼에 결측치가 있는 데이터를 선택하라\n","2. 위 데이터에서 age컬럼의 평균값을 구하라 (소수 1자리 반올림)"],"metadata":{"id":"aIpB0lhUbPX7"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df_na = df[~df['f1'].notnull()]\n","print('age컬럼의 평균값 = ' ,round(df_na['age'].mean(), 1) )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QXsepAxvX7k8","executionInfo":{"status":"ok","timestamp":1757423993406,"user_tz":-540,"elapsed":60,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"ec40ba3e-2a4d-4fe9-967f-ca41b450ec58"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["age컬럼의 평균값 =  53.6\n"]}]},{"cell_type":"markdown","source":["문제 14\n","1. 중복 데이터를 제거하라\n","2. f3컬럼의 결측치는 0, silver는 1, gold는 2, vip는 3으로 변환\n","3. 변환된 f3컬럼의 총합을 정수로 구하라"],"metadata":{"id":"r3YTl91Fb_tY"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df.drop_duplicates()\n","df['f3'] = df['f3'].fillna(0).replace('silver',1).replace('gold',2).replace('vip',3)\n","print('변환된 f3컬럼의 총합 = ', int(df['f3'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"St3c921fbn_y","executionInfo":{"status":"ok","timestamp":1757423993485,"user_tz":-540,"elapsed":80,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"6d34dd99-44d9-44ae-c250-170a387c1ef2"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["변환된 f3컬럼의 총합 =  167\n"]}]},{"cell_type":"markdown","source":["문제 15\n","1. 데이터에서 문자 자료형 컬럼을 삭제하라\n","2. 숫자 자료형 컬럼의 결측치를 0으로 대체\n","3. 각 행의 합이 3000보다 큰 것의 개수를 정수로 구하라\n","  (각 행의 합 : age + f1 + f2 + f5 + views)"],"metadata":{"id":"PoJHyryShmLD"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","obj_cols = df.select_dtypes('object').columns\n","df = df.drop(obj_cols, axis=1)\n","df = df.fillna(0)\n","df['sum_cols'] = df.age + df.f1 + df.f2 + df.f5 + df.views\n","print(\"각 행의 합이 3000보다 큰 것의 개수 = \", int(len(df[df['sum_cols']>3000])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nJhby7fheDBl","executionInfo":{"status":"ok","timestamp":1757423993527,"user_tz":-540,"elapsed":43,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"a1763fc8-d174-4752-874e-4a0616234300"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["각 행의 합이 3000보다 큰 것의 개수 =  88\n"]}]},{"cell_type":"markdown","source":["문제 16\n","1. view 컬럼의 1사분위, 3사분위수와 IQR을 계산하라\n","2. 이상치 조건에 맞는 데이터를 찾아라 (1사분위 - 1.5*IQR > x, x < 3사분위 + 1.5*IQR)\n","3. 이상치 데이터의 views 컬럼 합을 정수로 구하라"],"metadata":{"id":"1aKOHmjkkUUO"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","views_1q = df['views'].quantile(0.25)\n","views_3q = df['views'].quantile(0.75)\n","iqr = views_3q - views_1q\n","print(\"1사분위, 3사분위, IQR = \", views_1q, views_3q, iqr)\n","\n","outliers = df[\n","    (df['views'] < views_1q - 1.5*iqr) | (df['views'] > views_3q + 1.5*iqr)\n","]\n","print('이상치 데이터의 views 컬럼 합= ', int(outliers['views'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Y3O-lWsiHTc","executionInfo":{"status":"ok","timestamp":1757423993618,"user_tz":-540,"elapsed":91,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"95164b40-2dd8-44e6-d147-e61d5ea22c69"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["1사분위, 3사분위, IQR =  3031.0 8473.5 5442.5\n","이상치 데이터의 views 컬럼 합=  77699\n"]}]},{"cell_type":"markdown","source":["문제 17\n","1. views 컬럼의 표준편차를 구하라\n","2. age 컬럼의 이상치(소수점, 음수, 0)을 제거한 후, views 컬럼의 표준편차를 구하라\n","3. 이상치 제거 전후의 views 컬럼의 표준편차를 더하라 (소수 2자리 반올림)"],"metadata":{"id":"767n7GJlmdMD"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","print('views 컬럼의 표준편차 = ' , df['views'].std())\n","df_new = df[(df['age'] > 0) & (df['age'] == round(df['age'],0)) ]\n","print('이상치 제거후 views 컬럼의 표준편차 = ', df_new['views'].std() )\n","\n","print('이상치 제거 전후 표준편차의 합 = ' , round(df['views'].std() + df_new['views'].std(), 2) )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a_jrszEylUxD","executionInfo":{"status":"ok","timestamp":1757423993673,"user_tz":-540,"elapsed":55,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"446dde3e-036a-401a-cc2b-180d11c34a6a"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["views 컬럼의 표준편차 =  4121.626455600414\n","이상치 제거후 views 컬럼의 표준편차 =  4175.681776173446\n","이상치 제거 전후 표준편차의 합 =  8297.31\n"]}]},{"cell_type":"markdown","source":["문제 18\n","1. index 2001 데이터에서 평균보다 큰 값의 갯수는?\n","2. index 2003 데이터에서 평균보다 작은 값의 갯수는?\n","3. 두 갯수를 더하라"],"metadata":{"id":"nMrIg1sooz3Q"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/type1_data2.csv\", index_col='year')\n","df = df.T\n","display(df.head())\n","\n","print('index 2001 데이터에서 평균보다 큰 값의 갯수 = ', len(df[df[2001] > df[2001].mean()]))\n","print('index 2003 데이터에서 평균보다 큰 값의 갯수 = ', len(df[df[2003] < df[2003].mean()]))\n","print('두 갯수를 더한 값 = ', len(df[df[2001] > df[2001].mean()]) + len(df[df[2003] < df[2003].mean()]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"j681m5W5m9w3","executionInfo":{"status":"ok","timestamp":1757423993972,"user_tz":-540,"elapsed":299,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"fb81a13d-5054-4ca4-99b5-ce70ef6491e2"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["year  2000  2001  2002  2003  2004\n","0      137   176   128    78     1\n","1       74    87   132    45   162\n","2      114    64   123    26   124\n","3      140   110   112    50    12\n","4       80   128   134   177     1"],"text/html":["\n","  <div id=\"df-29ae0e1d-51d0-43f7-87cd-78c214ab371a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>year</th>\n","      <th>2000</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>137</td>\n","      <td>176</td>\n","      <td>128</td>\n","      <td>78</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>74</td>\n","      <td>87</td>\n","      <td>132</td>\n","      <td>45</td>\n","      <td>162</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>114</td>\n","      <td>64</td>\n","      <td>123</td>\n","      <td>26</td>\n","      <td>124</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>140</td>\n","      <td>110</td>\n","      <td>112</td>\n","      <td>50</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>80</td>\n","      <td>128</td>\n","      <td>134</td>\n","      <td>177</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29ae0e1d-51d0-43f7-87cd-78c214ab371a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-29ae0e1d-51d0-43f7-87cd-78c214ab371a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-29ae0e1d-51d0-43f7-87cd-78c214ab371a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-24f024f1-4074-4c74-b943-dc9f05642573\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24f024f1-4074-4c74-b943-dc9f05642573')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-24f024f1-4074-4c74-b943-dc9f05642573 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print('\\ub450 \\uac2f\\uc218\\ub97c \\ub354\\ud55c \\uac12 = ', len(df[df[2001] > df[2001]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": 2000,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30,\n        \"min\": 74,\n        \"max\": 140,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          74,\n          80,\n          114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2001,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 64,\n        \"max\": 176,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          87,\n          128,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2002,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 112,\n        \"max\": 134,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          132,\n          134,\n          123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2003,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59,\n        \"min\": 26,\n        \"max\": 177,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          45,\n          177,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2004,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 77,\n        \"min\": 1,\n        \"max\": 162,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          162,\n          12,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["index 2001 데이터에서 평균보다 큰 값의 갯수 =  100\n","index 2003 데이터에서 평균보다 큰 값의 갯수 =  102\n","두 갯수를 더한 값 =  202\n"]}]},{"cell_type":"markdown","source":["문제 19\n","1. 결측치를 바로 뒤의 값으로 대체하라 (바로 뒤도 결측치라면, 그 다음 값으로)\n","2. city, f2 컬럼을 기준으로 그룹합을 계산하라\n","3. views값이 3번째로 큰 city를 찾아라"],"metadata":{"id":"vnmmGJLKr7xA"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","df = df.fillna(method='bfill')\n","df_g = df.groupby(['city','f2']).sum(numeric_only=True).reset_index()\n","display(df_g.head())\n","\n","tmp = df_g.sort_values('views', ascending=False)\n","print('views값이 3번째로 큰 city = ', tmp.iloc[2,0])\n","#print('views값이 3번째로 큰 city = ', tmp.iloc[2]['city'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"ggetLq25pHBc","executionInfo":{"status":"ok","timestamp":1757423994084,"user_tz":-540,"elapsed":112,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"c0a0d083-360d-4506-8f50-894ffff1faae"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["  city  f2     age      f1           f5     views\n","0   경기   0  1192.9  1490.0  1425.236647  154066.0\n","1   경기   1   997.0  1016.0   935.958628   91442.0\n","2   경기   2   296.0   390.0   430.186433   42709.0\n","3   대구   0   664.0   982.0   371.184620  100421.0\n","4   대구   1   393.6   471.0   404.779978   49536.0"],"text/html":["\n","  <div id=\"df-d9ab2300-0cea-4b21-be27-6cbf538d2a44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>city</th>\n","      <th>f2</th>\n","      <th>age</th>\n","      <th>f1</th>\n","      <th>f5</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>경기</td>\n","      <td>0</td>\n","      <td>1192.9</td>\n","      <td>1490.0</td>\n","      <td>1425.236647</td>\n","      <td>154066.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>경기</td>\n","      <td>1</td>\n","      <td>997.0</td>\n","      <td>1016.0</td>\n","      <td>935.958628</td>\n","      <td>91442.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>경기</td>\n","      <td>2</td>\n","      <td>296.0</td>\n","      <td>390.0</td>\n","      <td>430.186433</td>\n","      <td>42709.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>대구</td>\n","      <td>0</td>\n","      <td>664.0</td>\n","      <td>982.0</td>\n","      <td>371.184620</td>\n","      <td>100421.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>대구</td>\n","      <td>1</td>\n","      <td>393.6</td>\n","      <td>471.0</td>\n","      <td>404.779978</td>\n","      <td>49536.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9ab2300-0cea-4b21-be27-6cbf538d2a44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9ab2300-0cea-4b21-be27-6cbf538d2a44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9ab2300-0cea-4b21-be27-6cbf538d2a44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f0d522c3-99c9-4490-a23e-799491a0cfb2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0d522c3-99c9-4490-a23e-799491a0cfb2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f0d522c3-99c9-4490-a23e-799491a0cfb2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#print('views\\uac12\\uc774 3\\ubc88\\uc9f8\\ub85c \\ud070 city = ', tmp\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\ub300\\uad6c\",\n          \"\\uacbd\\uae30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 383.7883270762674,\n        \"min\": 296.0,\n        \"max\": 1192.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          997.0,\n          393.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 449.40538492545903,\n        \"min\": 390.0,\n        \"max\": 1490.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1016.0,\n          471.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 460.6547894267696,\n        \"min\": 371.18461956,\n        \"max\": 1425.236647061,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          935.95862842,\n          404.77997811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44891.34683544257,\n        \"min\": 42709.0,\n        \"max\": 154066.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          91442.0,\n          49536.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["views값이 3번째로 큰 city =  경기\n"]}]},{"cell_type":"markdown","source":["문제 20\n","1. 연도 구분없이 월별 숫자형 컬럼의 합을 구하라\n","2. 합계 중 views가 가장 작은 값을 가진 월을 구하라 (정수로)"],"metadata":{"id":"n-2pW_Q9v1hv"}},{"cell_type":"code","source":["df = pd.read_csv(data_path)\n","## 날짜형 변환\n","df['subscribed']= pd.to_datetime(df['subscribed'])\n","df['month'] = df['subscribed'].dt.month\n","tmp = df.groupby('month').sum(numeric_only=True)\n","display(tmp)\n","\n","print('합계 중 views가 가장 작은 값을 가진 월 = ', tmp[tmp['views'] == tmp['views'].min()].index[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":475},"id":"EgmtM3U9tR1o","executionInfo":{"status":"ok","timestamp":1757423994230,"user_tz":-540,"elapsed":142,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"ca3eb7e5-ad26-4253-bc58-f24e13bad8ae"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["         age      f1  f2          f5     views\n","month                                         \n","1      441.8   608.0   1  487.453162   40013.0\n","2      860.7  1301.0  25  460.248156  165852.0\n","3      326.3   457.0   8  352.729057   39031.0\n","4      307.0   268.0   4  312.187975   41307.0\n","5      809.6   822.0  10  855.287894  110786.0\n","6      481.8   244.0   6  387.206296   31295.0\n","7      534.0   399.0  10  630.370464   67677.0\n","8      338.5   119.0   6  520.223827   51048.0\n","9      473.6   356.0   3  379.121958   66340.0\n","10     483.0   437.0   6  595.737639   48705.0\n","11     186.0   181.0   1  278.410220   15857.0\n","12     365.0   373.0   2  515.672397   28658.0"],"text/html":["\n","  <div id=\"df-f26a965e-8550-435f-83fd-2e09693064fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f5</th>\n","      <th>views</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>441.8</td>\n","      <td>608.0</td>\n","      <td>1</td>\n","      <td>487.453162</td>\n","      <td>40013.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>860.7</td>\n","      <td>1301.0</td>\n","      <td>25</td>\n","      <td>460.248156</td>\n","      <td>165852.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>326.3</td>\n","      <td>457.0</td>\n","      <td>8</td>\n","      <td>352.729057</td>\n","      <td>39031.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>307.0</td>\n","      <td>268.0</td>\n","      <td>4</td>\n","      <td>312.187975</td>\n","      <td>41307.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>809.6</td>\n","      <td>822.0</td>\n","      <td>10</td>\n","      <td>855.287894</td>\n","      <td>110786.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>481.8</td>\n","      <td>244.0</td>\n","      <td>6</td>\n","      <td>387.206296</td>\n","      <td>31295.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>534.0</td>\n","      <td>399.0</td>\n","      <td>10</td>\n","      <td>630.370464</td>\n","      <td>67677.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>338.5</td>\n","      <td>119.0</td>\n","      <td>6</td>\n","      <td>520.223827</td>\n","      <td>51048.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>473.6</td>\n","      <td>356.0</td>\n","      <td>3</td>\n","      <td>379.121958</td>\n","      <td>66340.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>483.0</td>\n","      <td>437.0</td>\n","      <td>6</td>\n","      <td>595.737639</td>\n","      <td>48705.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>186.0</td>\n","      <td>181.0</td>\n","      <td>1</td>\n","      <td>278.410220</td>\n","      <td>15857.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>365.0</td>\n","      <td>373.0</td>\n","      <td>2</td>\n","      <td>515.672397</td>\n","      <td>28658.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f26a965e-8550-435f-83fd-2e09693064fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f26a965e-8550-435f-83fd-2e09693064fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f26a965e-8550-435f-83fd-2e09693064fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4ca9fcf7-b774-438e-8894-ed1219a16d59\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ca9fcf7-b774-438e-8894-ed1219a16d59')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4ca9fcf7-b774-438e-8894-ed1219a16d59 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_1a1c90fa-ebda-44ea-8421-fc1118b0766a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tmp')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1a1c90fa-ebda-44ea-8421-fc1118b0766a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tmp');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tmp","summary":"{\n  \"name\": \"tmp\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 197.55089620376086,\n        \"min\": 186.0,\n        \"max\": 860.7,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          186.0,\n          483.0,\n          441.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 324.78611843376666,\n        \"min\": 119.0,\n        \"max\": 1301.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          181.0,\n          437.0,\n          608.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 1,\n        \"max\": 25,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25,\n          6,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 160.6662317933542,\n        \"min\": 278.41021963000003,\n        \"max\": 855.287894461,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          278.41021963000003,\n          595.73763856,\n          487.453162351\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41581.451424501545,\n        \"min\": 15857.0,\n        \"max\": 165852.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          15857.0,\n          48705.0,\n          40013.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["합계 중 views가 가장 작은 값을 가진 월 =  11\n"]}]},{"cell_type":"markdown","source":["문제 21\n","1. 예상도착 시간보다 늦게 도착한 건수는?\n","2. 이 중 거리가 7km 이상인 건수는? (정수)"],"metadata":{"id":"lBmY1BVz-QzP"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_NNlZegr7xLm","executionInfo":{"status":"ok","timestamp":1757423994511,"user_tz":-540,"elapsed":240,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"c5f3441e-2f53-4fc8-a7d0-6140d4eda0e3"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  주문시간               실제도착시간               예상도착시간  앱종류     거리  \\\n","0  2023-07-26 08:05:49  2023-07-26 09:14:06  2023-07-26 08:39:42  여기여   1.93   \n","1  2022-11-07 10:21:54  2022-11-07 10:44:04  2022-11-07 10:50:15  배고팡   5.19   \n","2  2023-04-18 05:00:57  2023-04-18 06:12:46  2023-04-18 05:32:53  배고팡  13.85   \n","3  2023-08-18 10:46:28  2023-08-18 11:16:25  2023-08-18 11:08:33  배고팡  10.90   \n","4  2023-08-11 09:58:27  2023-08-11 11:27:57  2023-08-11 10:51:57  여기여  14.96   \n","\n","  결제종류      user  \n","0   카드  user_275  \n","1   카드  user_360  \n","2   카드   user_36  \n","3  앱결제   user_65  \n","4   카드  user_176  "],"text/html":["\n","  <div id=\"df-a4bf42c3-4204-4454-af48-115950fcd74b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>주문시간</th>\n","      <th>실제도착시간</th>\n","      <th>예상도착시간</th>\n","      <th>앱종류</th>\n","      <th>거리</th>\n","      <th>결제종류</th>\n","      <th>user</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-07-26 08:05:49</td>\n","      <td>2023-07-26 09:14:06</td>\n","      <td>2023-07-26 08:39:42</td>\n","      <td>여기여</td>\n","      <td>1.93</td>\n","      <td>카드</td>\n","      <td>user_275</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-11-07 10:21:54</td>\n","      <td>2022-11-07 10:44:04</td>\n","      <td>2022-11-07 10:50:15</td>\n","      <td>배고팡</td>\n","      <td>5.19</td>\n","      <td>카드</td>\n","      <td>user_360</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-04-18 05:00:57</td>\n","      <td>2023-04-18 06:12:46</td>\n","      <td>2023-04-18 05:32:53</td>\n","      <td>배고팡</td>\n","      <td>13.85</td>\n","      <td>카드</td>\n","      <td>user_36</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-08-18 10:46:28</td>\n","      <td>2023-08-18 11:16:25</td>\n","      <td>2023-08-18 11:08:33</td>\n","      <td>배고팡</td>\n","      <td>10.90</td>\n","      <td>앱결제</td>\n","      <td>user_65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-08-11 09:58:27</td>\n","      <td>2023-08-11 11:27:57</td>\n","      <td>2023-08-11 10:51:57</td>\n","      <td>여기여</td>\n","      <td>14.96</td>\n","      <td>카드</td>\n","      <td>user_176</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4bf42c3-4204-4454-af48-115950fcd74b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4bf42c3-4204-4454-af48-115950fcd74b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4bf42c3-4204-4454-af48-115950fcd74b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-78d6c25e-7fe5-4236-8994-cf30e6f966b6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78d6c25e-7fe5-4236-8994-cf30e6f966b6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-78d6c25e-7fe5-4236-8994-cf30e6f966b6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"\\uc8fc\\ubb38\\uc2dc\\uac04\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"2022-12-18 18:07:24\",\n          \"2023-07-18 04:57:58\",\n          \"2023-06-20 09:45:56\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2e4\\uc81c\\ub3c4\\ucc29\\uc2dc\\uac04\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"2022-12-18 19:02:31\",\n          \"2023-07-18 05:53:58\",\n          \"2023-06-20 10:27:37\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc608\\uc0c1\\ub3c4\\ucc29\\uc2dc\\uac04\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"2022-12-18 18:32:26\",\n          \"2023-07-18 05:18:44\",\n          \"2023-06-20 10:30:09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc571\\uc885\\ub958\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uc5ec\\uae30\\uc5ec\",\n          \"\\ubc30\\uace0\\ud321\",\n          \"\\ubc30\\ub2ec\\uc655\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac70\\ub9ac\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.709468387895006,\n        \"min\": 0.53,\n        \"max\": 19.96,\n        \"num_unique_values\": 777,\n        \"samples\": [\n          0.9,\n          5.69,\n          11.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacb0\\uc81c\\uc885\\ub958\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uce74\\ub4dc\",\n          \"\\uc571\\uacb0\\uc81c\",\n          \"\\ud604\\uae08\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 426,\n        \"samples\": [\n          \"user_279\",\n          \"user_300\",\n          \"user_323\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df = df[df['예상도착시간']<df['실제도착시간']]\n","print('예상도착 시간보다 늦게 도착한 건수 = ', len(df))\n","\n","df = df[df['거리'] >= 7]\n","print('이 중 거리가 7km 이상인 건수 = ', len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J_wUVDuG-ml9","executionInfo":{"status":"ok","timestamp":1757423994606,"user_tz":-540,"elapsed":94,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"5b470987-1846-4ba6-fe32-0731baf65fb9"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["예상도착 시간보다 늦게 도착한 건수 =  510\n","이 중 거리가 7km 이상인 건수 =  311\n"]}]},{"cell_type":"markdown","source":["문제 22\n","1. 주문시간과 실제 도착시간의 차이를 분단위로 계산하라\n","2. 앱 종류별로 평균 도착시간(분)을 계산하라\n","3. 평균 가장 빠른 앱을 찾고, 해당앱의 평균 도착시간을 구하라(분, 정수)"],"metadata":{"id":"W0dxX8lV0Z4z"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","#print(df.info())\n","\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['경과시간_분'] = (df['실제도착시간'] - df['주문시간']).dt.total_seconds()/60\n","\n","df = df.groupby('앱종류')['경과시간_분'].mean()\n","df.sort_values()\n","\n","print('가장 빠른 앱의 평균 도착시간(분) = ', int(df.min()))"],"metadata":{"id":"BkrOv3Yx-0Nj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1757423994701,"user_tz":-540,"elapsed":94,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"904baee2-1cdf-4871-bdd3-24d35455bdc8"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["가장 빠른 앱의 평균 도착시간(분) =  61\n"]}]},{"cell_type":"markdown","source":["문 23\n","1. 각 결제 종류별로 실제 도착시간이 예상 도착시간 보다 늦은 주문의 비율은?\n","2. 비율 중 가장 큰 값을 반올림 하여 소수 2자리 까지 구하라"],"metadata":{"id":"kY9WVGZN6SrS"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df.head()\n","\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","\n","df['diff_min'] = (df['예상도착시간'] - df['실제도착시간']).dt.total_seconds() / 60\n","df['late_order'] = df['diff_min'] < 0\n","\n","df = df.groupby('결제종류')['late_order'].mean()\n","print('실제 도착시간이 예상 도착시간 보다 가장 늦은 주문의 비율 = ', round(df.max(),2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O3_phceZ3hES","executionInfo":{"status":"ok","timestamp":1757423994830,"user_tz":-540,"elapsed":122,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"5683dd4f-b58b-49ee-c80a-8191d4effe54"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["실제 도착시간이 예상 도착시간 보다 가장 늦은 주문의 비율 =  0.56\n"]}]},{"cell_type":"markdown","source":["문 24\n","1. 사용자별 주문거리의 합계가 50km 이상인 사람들의 결제 방식을 구하라\n","2. 이 결제방식 중 가장 빈도가 높은 수는?"],"metadata":{"id":"Msgyrn3J88uT"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","\n","df_dist = df.groupby('user')['거리'].sum()\n","df_dist = df_dist[df_dist >= 50]\n","\n","df = df[df['user'].isin(df_dist.index)]\n","df = df['결제종류'].value_counts().sort_values(ascending=False)\n","print('가장 빈도가 높은 결제방식의 수 = ', int(df.iloc[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lfMss46k6hnh","executionInfo":{"status":"ok","timestamp":1757423995133,"user_tz":-540,"elapsed":304,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"4e9bcf2b-5d65-4b99-a858-3a65001dbe9d"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["가장 빈도가 높은 결제방식의 수 =  48\n"]}]},{"cell_type":"markdown","source":["문 25\n","1. 각 사용자별 첫 주문과 마지막 주문사이 간격을 일단위로 계산하라\n","2. 시간차가 0일인 사용자 제외, 나머지 사용자들의 평균 시간간격(일)을 계산하라\n","3. 평균 시간간격 보다 긴 시간간격을 가진 사용자 수를 구하라(정수)"],"metadata":{"id":"tylOMLOHCR4S"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","\n","df_minmax = df.groupby('user')['주문시간'].agg(['min', 'max'])\n","#df_minmax['order_term'] = (df_minmax['max'] - df_minmax['min']).dt.total_seconds() / (60*60*24)\n","df_minmax['order_term'] = (df_minmax['max'] - df_minmax['min']).dt.days\n","\n","df_minmax = df_minmax[df_minmax['order_term'] != 0]\n","print('사용자들의 평균 주문간격(0일 제외) = ', int(df_minmax['order_term'].mean()) )\n","\n","result = df_minmax[df_minmax['order_term'] > df_minmax['order_term'].mean()]\n","print('평균 시간간격 보다 긴 시간간격을 가진 사용자 수 = ', int(len(result)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EJknoUOf9ICN","executionInfo":{"status":"ok","timestamp":1757423995330,"user_tz":-540,"elapsed":197,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"4963a6b4-5354-4c1b-f572-766d988525e2"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["사용자들의 평균 주문간격(0일 제외) =  167\n","평균 시간간격 보다 긴 시간간격을 가진 사용자 수 =  146\n"]}]},{"cell_type":"markdown","source":["문 26\n","1. 주문이 가장 많이 발생한 연/월을 구하라\n","2. 해당 연/월에 '배고핑'앱을 통한 주문 중, '앱결제'로 결제된 주문의 비율을 구하라 (소수 2자리\n","반올림)"],"metadata":{"id":"vXnEq94S6BId"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","\n","df['주문연도'] = df['주문시간'].dt.year\n","df['주문월'] = df['주문시간'].dt.month\n","\n","g = df.groupby(['주문연도','주문월']).size().reset_index(name='cnt')\n","y = g.sort_values('cnt',ascending=False).iloc[0,0]\n","m = g.sort_values('cnt',ascending=False).iloc[0,1]\n","print('가장 주문이 많은 연도 = ', y)\n","print('가장 주문이 많은 월 = ', m)\n","\n","df_bgp = df[\n","    (df['주문연도'] == 2022) & (df['주문월'] == 9) & (df['앱종류'] == '배고팡')\n","]\n","\n","df_bgp['앱결제여부'] = (df_bgp['결제종류'] == '앱결제')\n","print('2022년 9월 배고팡 주문 중 앱결제 비중 = ', round(df_bgp['앱결제여부'].mean() , 2))"],"metadata":{"id":"gK7ZGQZhCjUu","executionInfo":{"status":"ok","timestamp":1757423995429,"user_tz":-540,"elapsed":13,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6965d975-ccf8-49cb-936a-97d82b0f98c0"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["가장 주문이 많은 연도 =  2022\n","가장 주문이 많은 월 =  9\n","2022년 9월 배고팡 주문 중 앱결제 비중 =  0.31\n"]}]},{"cell_type":"markdown","source":["문 27\n","1. 점심시간(10시 ~ 13시 전)에 주문된 배달 데이터를 찾아라\n","2. 점심시간 주문 건 중 과속(평균속도 50km 이상)한 주문수를 구하라(정수)\n","> 배달시간 = 실제도착시간 - 주문시간  \n","> 속도 = 거리(km) / 시간(h)"],"metadata":{"id":"qKDHt84g_VWi"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","\n","#점심시간 주문 데이터\n","df['주문시간_h'] = df['주문시간'].dt.hour\n","df_launch = df[(df['주문시간_h'] >= 10) & (df['주문시간_h'] < 13)]\n","#과속여부 계산\n","df['배달경과시간_h'] = (df['실제도착시간'] - df['주문시간']).dt.total_seconds() / (60*60)\n","df['배달속도'] = df['거리']/df['배달경과시간_h']\n","result = df[df['배달속도'] >= 50]\n","len(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4zlQxVtk8pCJ","executionInfo":{"status":"ok","timestamp":1757423995475,"user_tz":-540,"elapsed":45,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"1c0a8f7e-a5e3-4bc3-9120-1655ecc52c29"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["문 28\n","1. 연도와 월을 기준으로 주문수를 집계하라\n","2. 가장 많은 주문이 있었던 연도와 월을 구하라 (형태: 202402)"],"metadata":{"id":"V9Ws1A9IEfsT"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","\n","df['주문연월'] = df['주문시간'].dt.to_period('m')\n","\n","g = df.groupby('주문연월').size().reset_index(name='cnt')\n","result = str(g.sort_values('cnt', ascending=False).iloc[0]['주문연월'])\n","print(result.replace('-', ''))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aKtw8T3o_wAi","executionInfo":{"status":"ok","timestamp":1757423995562,"user_tz":-540,"elapsed":87,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"5e8e7027-0994-4420-b23a-94a66d8894e1"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["202209\n"]}]},{"cell_type":"markdown","source":["문 29\n","1. 배달료 계산 기준표에 따라 각 주문에 대한 배달료를 계산하라\n","2. 월별 배달료 총합을 구하라\n","3. 배달료가 가장 많이 발생한 월을 찾고, 그 월의 총 배달료를 구하라(정수)\n","> 배달요금   \n","> 5km 미만 : 2000원  \n","> 5 ~ 10km 미만 : 4000원  \n","> 10 ~ 15km 미만 : 6000원  \n","> 15 ~ 20km 미만 : 8000원   "],"metadata":{"id":"xxA7hhqgJtI9"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df.head()\n","\n","#연월\n","df['주문연월'] = pd.to_datetime(df['주문시간']).dt.to_period('m')\n","#배달료\n","def delivery_fee(x):\n","  if x < 5:\n","    return 2000\n","  elif x < 10:\n","    return 4000\n","  elif x < 15:\n","    return 6000\n","  elif x < 20:\n","    return 8000\n","\n","df['배달료'] = df['거리'].apply(delivery_fee)\n","\n","#월별 배달료\n","g = df.groupby('주문연월')['배달료'].sum().reset_index()\n","result = g[g['배달료'] == g['배달료'].max()]\n","print('배달료가 가장 많은 달의 총 배달료 = ', int(result.iloc[0]['배달료']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gtN92-2nE5Bx","executionInfo":{"status":"ok","timestamp":1757423995683,"user_tz":-540,"elapsed":122,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"5afc92b8-901e-41cd-dfac-e11586187126"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["배달료가 가장 많은 달의 총 배달료 =  448000\n"]}]},{"cell_type":"markdown","source":["문 30\n","1. 주말 주문건수와 평일 주문건수를 구하라\n","2. 주말 주문건수와 평일 주문건수간 차이를 절대값으로 구하고, 정수형으로 변환하라"],"metadata":{"id":"Cxt4N3hUOIv3"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['주문시간'] = pd.to_datetime(df['주문시간'])\n","df['실제도착시간'] = pd.to_datetime(df['실제도착시간'])\n","df['예상도착시간'] = pd.to_datetime(df['예상도착시간'])\n","df.head()\n","\n","#평일-주말 구분\n","df['요일'] = df['주문시간'].dt.day_name()\n","def week_find(x):\n","  if x == 'Sunday': return '주말'\n","  elif x == 'Saturday': return '주말'\n","  else : return '평일'\n","\n","df['주말구분'] = df['요일'].apply(week_find)\n","\n","df_weekday = df[df['주말구분']=='평일']\n","df_weekend = df[df['주말구분']=='주말']\n","print('주말주문건수 = ', len(df_weekend))\n","print('평일주문건수 = ', len(df_weekday))\n","\n","print('주말-평일 주문건수 차이 = ', int(abs(len(df_weekend) - len(df_weekday))))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nINKshOrNGJm","executionInfo":{"status":"ok","timestamp":1757423995962,"user_tz":-540,"elapsed":280,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"713aafb0-4124-4d0a-ca16-8faaad5cad72"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["주말주문건수 =  294\n","평일주문건수 =  706\n","주말-평일 주문건수 차이 =  412\n"]}]},{"cell_type":"markdown","source":["문 31\n","1. user컬럼에서 뒷부분 숫자만 추출하라\n","2. 추출된 숫자를 모두 합친 값을 구하라(정수)"],"metadata":{"id":"-SWyw0kvu0jf"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/delivery_time.csv\")\n","df['num'] = df['user'].str[5:]\n","print('추출된 숫자의 합계 = ', df['num'].astype('int').sum())"],"metadata":{"id":"Js5NMIkMPXLk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1757426047665,"user_tz":-540,"elapsed":61,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"e15bd2c7-6f67-44f5-98ab-f8cab32052c9"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["추출된 숫자의 합계 =  261387\n"]}]},{"cell_type":"markdown","source":["문 32\n","1. 수학, 영어, 국어 점수의 합은?\n","2. 합이 가장 큰 상위 10명을 찾아라\n","3. 찾은 10명의 수학 평균점수를 구하라 (반올림 정수)"],"metadata":{"id":"-u9AHuMlwYzz"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data.csv\")\n","df['tot_score'] = df['수학']+df['영어']+df['국어']\n","tmp = df.sort_values('tot_score', ascending=False)[:10]\n","print('총점 상위 10명의 수학 평균점수 = ', round(tmp['수학'].mean()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7JJBCgcnu__n","executionInfo":{"status":"ok","timestamp":1757426371197,"user_tz":-540,"elapsed":32,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"b49c6f37-3eb8-420e-e035-8832ced927f9"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["총점 상위 10명의 수학 평균점수 =  82\n"]}]},{"cell_type":"markdown","source":["문 33\n","1. 과목에 상관없이 가장 작은 점수 25개를 찾아라\n","2. 찾은 점수 25개의 합을 구하라(정수)"],"metadata":{"id":"dPE_eL4z01St"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data.csv\")\n","df.head()\n","df_melt = df.melt(id_vars='이름', value_vars=['수학','영어','국어'])\n","tmp = df_melt.sort_values('value')[:25]\n","print('과목상관없이 가장 작은 점수 25개의 합 = ', int(tmp['value'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cvfytw9fwqoJ","executionInfo":{"status":"ok","timestamp":1757427874285,"user_tz":-540,"elapsed":169,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"ce490c11-7772-4ed4-f29f-94a5d12d5927"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["과목상관없이 가장 작은 점수 25개의 합 =  420\n"]}]},{"cell_type":"markdown","source":["문 34\n","1. 두 파일을 학생순서 기준으로 병합하라 (학생 순서는 동일함)\n","2. 학생별 수학, 영어, 국어, 과학 점수의 평균을 구하라\n","3. 평균 점수가 60점 이상은 몇명인가?"],"metadata":{"id":"8P3e-4As3VH2"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data.csv\")\n","df_science = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data_science.csv\")\n","df_science.head()\n","\n","df_all = df.merge(df_science, on='이름')\n","df_all['avg_score'] = (df_all['수학']+df_all['영어']+df_all['국어']+df_all['과학']) / 4\n","df_all_over60 = df_all[df_all['avg_score']>= 60]\n","print('평균점수 60점 이상인 학생 수 = ', len(df_all_over60))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WdGCYVDa1Fzh","executionInfo":{"status":"ok","timestamp":1757428312907,"user_tz":-540,"elapsed":77,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"79e54ffb-be2a-4b73-ba02-8f9da0bd1710"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["평균점수 60점 이상인 학생 수 =  9\n"]}]},{"cell_type":"markdown","source":["문 35\n","1. 두 파일을 이름 기준으로 합쳐라\n","2. 영어교사가 장선생이면서 사회교사가 오선생인 학생들을 필터링하라\n","3. 필터링된 학생들의 수학점수를 모두 더하라 (정수)"],"metadata":{"id":"EeK6MnFE5I9l"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data.csv\")\n","df_science = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert/main/part1/ch3/school_data_social.csv\")\n","df_merge = df.merge(df_science, on='이름')\n","df_merge = df_merge[(df_merge['영어교사']=='장선생') & (df_merge['사회교사']=='오선생')]\n","print('필터링된 학생들의 수학점수 합계 = ', int(df_merge['수학'].sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bpfgoMrc4kCT","executionInfo":{"status":"ok","timestamp":1757428608853,"user_tz":-540,"elapsed":237,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"835a60f0-795f-4823-e4b6-5d068c8a99a2"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["필터링된 학생들의 수학점수 합계 =  602\n"]}]},{"cell_type":"markdown","source":["문 36\n","1. 판매금액의 결측치를 해당지역의 평균 판매금액으로 대체하라\n","2. 각 거래마다 판매금액과 해당지역 평균 판매금액의 차이를 절대값으로 구하라\n","3. 각 지역에서 차이값의 평균을 구한 후, 이 값이 가장 큰 지역의 지역코드를 구하라"],"metadata":{"id":"oVYcURBz6JFQ"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/refs/heads/main/part1/ch3/sales.csv\")\n","df.head()\n","#결측치 -> 지역별 평균 판매금액\n","area_mean = df.groupby('지역코드')['판매금액'].transform('mean')\n","df['판매금액'] = df['판매금액'].fillna(area_mean)\n","#지역별 평균 판매금액\n","df['평균판매금액'] = area_mean\n","#지역별 abs(판매금액 - 평균판매금액)\n","df['금액차'] = abs(df['판매금액']-df['평균판매금액'])\n","#금액차 평균\n","result = df.groupby('지역코드')['금액차'].mean().reset_index()\n","print('금액차가 가장 큰 지역코드 = ', result.sort_values('금액차',ascending=False).iloc[0,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CavttVJ35o23","executionInfo":{"status":"ok","timestamp":1757430435263,"user_tz":-540,"elapsed":47,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"9f43b134-fd0a-431e-8f89-2755662c41b1"},"execution_count":112,"outputs":[{"output_type":"stream","name":"stdout","text":["금액차가 가장 큰 지역코드 =  103\n"]}]},{"cell_type":"markdown","source":["문 37\n","1. 각 행에서 판매수량과 단가를 이용하여 매출액을 계산하라\n","2. 요일을 평일/주말로 구분하고, 매장별 평일과 주말 매출의 합계를 구하라\n","3. 매장별 평일/주말 매출액 차이를 절대값으로 구하고, 모든 매장 중 가장 큰 절대값 차이를 찾아라"],"metadata":{"id":"exIzziM9DTXA"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/refs/heads/main/part1/ch3/store_sales.csv\")\n","df.head()\n","#매출액\n","df['매출액'] = df['판매수량']*df['단가']\n","#평일-주말 구분\n","def day_map(x):\n","  if x == '토': return '주말'\n","  elif x == '일': return '주말'\n","  else : return '평일'\n","\n","df['구분'] = df['요일'].apply(day_map)\n","#매장별 평일-주말 매출합계 차이\n","df = df.groupby(['매장코드','구분'])['매출액'].sum().unstack().reset_index()\n","df['매출차이'] = abs(df['주말']-df['평일'])\n","\n","print('모든 매장 중 가장 큰 절대값 차이 = ', df.sort_values('매출차이', ascending=False).iloc[0,3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bqpozENQ8WaX","executionInfo":{"status":"ok","timestamp":1757431756516,"user_tz":-540,"elapsed":49,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"67d1d7f5-26a9-40eb-d2f7-824f953102b6"},"execution_count":121,"outputs":[{"output_type":"stream","name":"stdout","text":["모든 매장 중 가장 큰 절대값 차이 =  241975\n"]}]},{"cell_type":"markdown","source":["문 38\n","1. 각 리전과 채널 조합별로 제품 A,B의 총 판매액을 구하라\n","2. 제품 A의 매출비율을 구하라 (A비율 = A판매액 / (A판매액+B판매액)\n","3. A비율 중 최대값을 찾아라 (소수 2자리 반올림)"],"metadata":{"id":"4322E14xGa4I"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/refs/heads/main/part1/ch3/region_sales.csv\")\n","df.head()\n","\n","df = df.groupby(['Region', 'Channel','Product'])['Sales'].sum().unstack().reset_index()\n","df['A비율'] = df['A'] / (df['A']+df['B'])\n","print('A비율 중 최대값 = ', round(df['A비율'].max(),2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VKZP7Wi_DqLN","executionInfo":{"status":"ok","timestamp":1757432187485,"user_tz":-540,"elapsed":50,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"1aa1fb92-4913-4853-a689-e84ebd60436f"},"execution_count":132,"outputs":[{"output_type":"stream","name":"stdout","text":["A비율 중 최대값 =  0.51\n"]}]},{"cell_type":"code","source":["##참고. pivot_table을 사용한 풀이\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/refs/heads/main/part1/ch3/region_sales.csv\")\n","pivot = pd.pivot_table(df, index=['Region', 'Channel'], columns='Product', values='Sales', aggfunc='sum')\n","pivot['A비율'] = pivot['A']/(pivot['A']+pivot['B'])\n","round(pivot['A비율'].max(),2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ARMrnb-vG3Zn","executionInfo":{"status":"ok","timestamp":1757432408863,"user_tz":-540,"elapsed":53,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"b704375c-fbc5-4db6-a154-e0ebb543579b"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.51"]},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["문 39\n","1. 지역과 월별 매출 합계를 구하라\n","2. 위의 결과 중 매춣 합계가 1400을 초과하는 경우의 건수는?"],"metadata":{"id":"V7iNhvA0Irjb"}},{"cell_type":"code","source":["df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/bigdata_analyst_cert_v2/refs/heads/main/part1/ch3/monthly_sales.csv\")\n","df.head()\n","#컬럼 합치기(melt)\n","df_melt = pd.melt(df, id_vars = 'Region', value_vars=['Jan','Feb','Mar'], var_name='Month', value_name='Sales')\n","#그룹합계\n","g_sales = df_melt.groupby(['Region','Month'])['Sales'].sum().reset_index()\n","\n","print('매출합계 1400 이상인 건 = ', sum(g_sales['Sales'] > 1400))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MyihbSKKIO7H","executionInfo":{"status":"ok","timestamp":1757433339448,"user_tz":-540,"elapsed":152,"user":{"displayName":"YB Choi","userId":"07490442826910451468"}},"outputId":"2c631736-1e29-4fa1-b7ac-4d7ddea9c055"},"execution_count":161,"outputs":[{"output_type":"stream","name":"stdout","text":["매출합계 1400 이상인 건 =  6\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"6wgsC8AcKTBx"},"execution_count":null,"outputs":[]}]}